/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAmbr.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAmbr::OAIAmbr(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAmbr::OAIAmbr() {
    this->initializeModel();
}

OAIAmbr::~OAIAmbr() {}

void OAIAmbr::initializeModel() {

    m_uplink_isSet = false;
    m_uplink_isValid = false;

    m_downlink_isSet = false;
    m_downlink_isValid = false;
}

void OAIAmbr::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAmbr::fromJsonObject(QJsonObject json) {

    m_uplink_isValid = ::OpenAPI::fromJsonValue(uplink, json[QString("uplink")]);
    m_uplink_isSet = !json[QString("uplink")].isNull() && m_uplink_isValid;

    m_downlink_isValid = ::OpenAPI::fromJsonValue(downlink, json[QString("downlink")]);
    m_downlink_isSet = !json[QString("downlink")].isNull() && m_downlink_isValid;
}

QString OAIAmbr::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAmbr::asJsonObject() const {
    QJsonObject obj;
    if (m_uplink_isSet) {
        obj.insert(QString("uplink"), ::OpenAPI::toJsonValue(uplink));
    }
    if (m_downlink_isSet) {
        obj.insert(QString("downlink"), ::OpenAPI::toJsonValue(downlink));
    }
    return obj;
}

QString OAIAmbr::getUplink() const {
    return uplink;
}
void OAIAmbr::setUplink(const QString &uplink) {
    this->uplink = uplink;
    this->m_uplink_isSet = true;
}

bool OAIAmbr::is_uplink_Set() const{
    return m_uplink_isSet;
}

bool OAIAmbr::is_uplink_Valid() const{
    return m_uplink_isValid;
}

QString OAIAmbr::getDownlink() const {
    return downlink;
}
void OAIAmbr::setDownlink(const QString &downlink) {
    this->downlink = downlink;
    this->m_downlink_isSet = true;
}

bool OAIAmbr::is_downlink_Set() const{
    return m_downlink_isSet;
}

bool OAIAmbr::is_downlink_Valid() const{
    return m_downlink_isValid;
}

bool OAIAmbr::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_uplink_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_downlink_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAmbr::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_uplink_isValid && m_downlink_isValid && true;
}

} // namespace OpenAPI
