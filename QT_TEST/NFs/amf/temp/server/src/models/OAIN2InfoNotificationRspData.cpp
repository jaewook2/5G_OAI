/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIN2InfoNotificationRspData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIN2InfoNotificationRspData::OAIN2InfoNotificationRspData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIN2InfoNotificationRspData::OAIN2InfoNotificationRspData() {
    this->initializeModel();
}

OAIN2InfoNotificationRspData::~OAIN2InfoNotificationRspData() {}

void OAIN2InfoNotificationRspData::initializeModel() {

    m_n2_info_content_isSet = false;
    m_n2_info_content_isValid = false;
}

void OAIN2InfoNotificationRspData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIN2InfoNotificationRspData::fromJsonObject(QJsonObject json) {

    m_n2_info_content_isValid = ::OpenAPI::fromJsonValue(n2_info_content, json[QString("n2InfoContent")]);
    m_n2_info_content_isSet = !json[QString("n2InfoContent")].isNull() && m_n2_info_content_isValid;
}

QString OAIN2InfoNotificationRspData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIN2InfoNotificationRspData::asJsonObject() const {
    QJsonObject obj;
    if (n2_info_content.isSet()) {
        obj.insert(QString("n2InfoContent"), ::OpenAPI::toJsonValue(n2_info_content));
    }
    return obj;
}

OAIN2InfoContent OAIN2InfoNotificationRspData::getN2InfoContent() const {
    return n2_info_content;
}
void OAIN2InfoNotificationRspData::setN2InfoContent(const OAIN2InfoContent &n2_info_content) {
    this->n2_info_content = n2_info_content;
    this->m_n2_info_content_isSet = true;
}

bool OAIN2InfoNotificationRspData::is_n2_info_content_Set() const{
    return m_n2_info_content_isSet;
}

bool OAIN2InfoNotificationRspData::is_n2_info_content_Valid() const{
    return m_n2_info_content_isValid;
}

bool OAIN2InfoNotificationRspData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (n2_info_content.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIN2InfoNotificationRspData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
