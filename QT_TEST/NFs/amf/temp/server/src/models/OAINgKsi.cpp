/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINgKsi.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINgKsi::OAINgKsi(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINgKsi::OAINgKsi() {
    this->initializeModel();
}

OAINgKsi::~OAINgKsi() {}

void OAINgKsi::initializeModel() {

    m_tsc_isSet = false;
    m_tsc_isValid = false;

    m_ksi_isSet = false;
    m_ksi_isValid = false;
}

void OAINgKsi::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINgKsi::fromJsonObject(QJsonObject json) {

    m_tsc_isValid = ::OpenAPI::fromJsonValue(tsc, json[QString("tsc")]);
    m_tsc_isSet = !json[QString("tsc")].isNull() && m_tsc_isValid;

    m_ksi_isValid = ::OpenAPI::fromJsonValue(ksi, json[QString("ksi")]);
    m_ksi_isSet = !json[QString("ksi")].isNull() && m_ksi_isValid;
}

QString OAINgKsi::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINgKsi::asJsonObject() const {
    QJsonObject obj;
    if (tsc.isSet()) {
        obj.insert(QString("tsc"), ::OpenAPI::toJsonValue(tsc));
    }
    if (m_ksi_isSet) {
        obj.insert(QString("ksi"), ::OpenAPI::toJsonValue(ksi));
    }
    return obj;
}

OAIScType OAINgKsi::getTsc() const {
    return tsc;
}
void OAINgKsi::setTsc(const OAIScType &tsc) {
    this->tsc = tsc;
    this->m_tsc_isSet = true;
}

bool OAINgKsi::is_tsc_Set() const{
    return m_tsc_isSet;
}

bool OAINgKsi::is_tsc_Valid() const{
    return m_tsc_isValid;
}

qint32 OAINgKsi::getKsi() const {
    return ksi;
}
void OAINgKsi::setKsi(const qint32 &ksi) {
    this->ksi = ksi;
    this->m_ksi_isSet = true;
}

bool OAINgKsi::is_ksi_Set() const{
    return m_ksi_isSet;
}

bool OAINgKsi::is_ksi_Valid() const{
    return m_ksi_isValid;
}

bool OAINgKsi::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (tsc.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ksi_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINgKsi::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tsc_isValid && m_ksi_isValid && true;
}

} // namespace OpenAPI
