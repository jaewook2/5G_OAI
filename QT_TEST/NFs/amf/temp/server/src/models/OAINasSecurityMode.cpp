/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINasSecurityMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINasSecurityMode::OAINasSecurityMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINasSecurityMode::OAINasSecurityMode() {
    this->initializeModel();
}

OAINasSecurityMode::~OAINasSecurityMode() {}

void OAINasSecurityMode::initializeModel() {

    m_integrity_algorithm_isSet = false;
    m_integrity_algorithm_isValid = false;

    m_ciphering_algorithm_isSet = false;
    m_ciphering_algorithm_isValid = false;
}

void OAINasSecurityMode::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINasSecurityMode::fromJsonObject(QJsonObject json) {

    m_integrity_algorithm_isValid = ::OpenAPI::fromJsonValue(integrity_algorithm, json[QString("integrityAlgorithm")]);
    m_integrity_algorithm_isSet = !json[QString("integrityAlgorithm")].isNull() && m_integrity_algorithm_isValid;

    m_ciphering_algorithm_isValid = ::OpenAPI::fromJsonValue(ciphering_algorithm, json[QString("cipheringAlgorithm")]);
    m_ciphering_algorithm_isSet = !json[QString("cipheringAlgorithm")].isNull() && m_ciphering_algorithm_isValid;
}

QString OAINasSecurityMode::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINasSecurityMode::asJsonObject() const {
    QJsonObject obj;
    if (integrity_algorithm.isSet()) {
        obj.insert(QString("integrityAlgorithm"), ::OpenAPI::toJsonValue(integrity_algorithm));
    }
    if (ciphering_algorithm.isSet()) {
        obj.insert(QString("cipheringAlgorithm"), ::OpenAPI::toJsonValue(ciphering_algorithm));
    }
    return obj;
}

OAIIntegrityAlgorithm OAINasSecurityMode::getIntegrityAlgorithm() const {
    return integrity_algorithm;
}
void OAINasSecurityMode::setIntegrityAlgorithm(const OAIIntegrityAlgorithm &integrity_algorithm) {
    this->integrity_algorithm = integrity_algorithm;
    this->m_integrity_algorithm_isSet = true;
}

bool OAINasSecurityMode::is_integrity_algorithm_Set() const{
    return m_integrity_algorithm_isSet;
}

bool OAINasSecurityMode::is_integrity_algorithm_Valid() const{
    return m_integrity_algorithm_isValid;
}

OAICipheringAlgorithm OAINasSecurityMode::getCipheringAlgorithm() const {
    return ciphering_algorithm;
}
void OAINasSecurityMode::setCipheringAlgorithm(const OAICipheringAlgorithm &ciphering_algorithm) {
    this->ciphering_algorithm = ciphering_algorithm;
    this->m_ciphering_algorithm_isSet = true;
}

bool OAINasSecurityMode::is_ciphering_algorithm_Set() const{
    return m_ciphering_algorithm_isSet;
}

bool OAINasSecurityMode::is_ciphering_algorithm_Valid() const{
    return m_ciphering_algorithm_isValid;
}

bool OAINasSecurityMode::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (integrity_algorithm.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (ciphering_algorithm.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINasSecurityMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_integrity_algorithm_isValid && m_ciphering_algorithm_isValid && true;
}

} // namespace OpenAPI
