/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITraceData.h
 *
 * 
 */

#ifndef OAITraceData_H
#define OAITraceData_H

#include <QJsonObject>

#include "OAIIpv6Addr.h"
#include "OAITraceDepth.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITraceData : public OAIObject {
public:
    OAITraceData();
    OAITraceData(QString json);
    ~OAITraceData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTraceRef() const;
    void setTraceRef(const QString &trace_ref);
    bool is_trace_ref_Set() const;
    bool is_trace_ref_Valid() const;

    OAITraceDepth getTraceDepth() const;
    void setTraceDepth(const OAITraceDepth &trace_depth);
    bool is_trace_depth_Set() const;
    bool is_trace_depth_Valid() const;

    QString getNeTypeList() const;
    void setNeTypeList(const QString &ne_type_list);
    bool is_ne_type_list_Set() const;
    bool is_ne_type_list_Valid() const;

    QString getEventList() const;
    void setEventList(const QString &event_list);
    bool is_event_list_Set() const;
    bool is_event_list_Valid() const;

    QString getCollectionEntityIpv4Addr() const;
    void setCollectionEntityIpv4Addr(const QString &collection_entity_ipv4_addr);
    bool is_collection_entity_ipv4_addr_Set() const;
    bool is_collection_entity_ipv4_addr_Valid() const;

    OAIIpv6Addr getCollectionEntityIpv6Addr() const;
    void setCollectionEntityIpv6Addr(const OAIIpv6Addr &collection_entity_ipv6_addr);
    bool is_collection_entity_ipv6_addr_Set() const;
    bool is_collection_entity_ipv6_addr_Valid() const;

    QString getInterfaceList() const;
    void setInterfaceList(const QString &interface_list);
    bool is_interface_list_Set() const;
    bool is_interface_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString trace_ref;
    bool m_trace_ref_isSet;
    bool m_trace_ref_isValid;

    OAITraceDepth trace_depth;
    bool m_trace_depth_isSet;
    bool m_trace_depth_isValid;

    QString ne_type_list;
    bool m_ne_type_list_isSet;
    bool m_ne_type_list_isValid;

    QString event_list;
    bool m_event_list_isSet;
    bool m_event_list_isValid;

    QString collection_entity_ipv4_addr;
    bool m_collection_entity_ipv4_addr_isSet;
    bool m_collection_entity_ipv4_addr_isValid;

    OAIIpv6Addr collection_entity_ipv6_addr;
    bool m_collection_entity_ipv6_addr_isSet;
    bool m_collection_entity_ipv6_addr_isValid;

    QString interface_list;
    bool m_interface_list_isSet;
    bool m_interface_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITraceData)

#endif // OAITraceData_H
