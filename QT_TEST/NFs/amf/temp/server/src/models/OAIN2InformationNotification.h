/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIN2InformationNotification.h
 *
 * 
 */

#ifndef OAIN2InformationNotification_H
#define OAIN2InformationNotification_H

#include <QJsonObject>

#include "OAIGlobalRanNodeId.h"
#include "OAIGuami.h"
#include "OAIIpv6Addr.h"
#include "OAIN2InfoContainer.h"
#include "OAIN2InfoNotifyReason.h"
#include "OAISmfChangeInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIN2InformationNotification : public OAIObject {
public:
    OAIN2InformationNotification();
    OAIN2InformationNotification(QString json);
    ~OAIN2InformationNotification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getN2NotifySubscriptionId() const;
    void setN2NotifySubscriptionId(const QString &n2_notify_subscription_id);
    bool is_n2_notify_subscription_id_Set() const;
    bool is_n2_notify_subscription_id_Valid() const;

    OAIN2InfoContainer getN2InfoContainer() const;
    void setN2InfoContainer(const OAIN2InfoContainer &n2_info_container);
    bool is_n2_info_container_Set() const;
    bool is_n2_info_container_Valid() const;

    QList<qint32> getToReleaseSessionList() const;
    void setToReleaseSessionList(const QList<qint32> &to_release_session_list);
    bool is_to_release_session_list_Set() const;
    bool is_to_release_session_list_Valid() const;

    QString getLcsCorrelationId() const;
    void setLcsCorrelationId(const QString &lcs_correlation_id);
    bool is_lcs_correlation_id_Set() const;
    bool is_lcs_correlation_id_Valid() const;

    OAIN2InfoNotifyReason getNotifyReason() const;
    void setNotifyReason(const OAIN2InfoNotifyReason &notify_reason);
    bool is_notify_reason_Set() const;
    bool is_notify_reason_Valid() const;

    QList<OAISmfChangeInfo> getSmfChangeInfoList() const;
    void setSmfChangeInfoList(const QList<OAISmfChangeInfo> &smf_change_info_list);
    bool is_smf_change_info_list_Set() const;
    bool is_smf_change_info_list_Valid() const;

    OAIGlobalRanNodeId getRanNodeId() const;
    void setRanNodeId(const OAIGlobalRanNodeId &ran_node_id);
    bool is_ran_node_id_Set() const;
    bool is_ran_node_id_Valid() const;

    QString getInitialAmfName() const;
    void setInitialAmfName(const QString &initial_amf_name);
    bool is_initial_amf_name_Set() const;
    bool is_initial_amf_name_Valid() const;

    QString getAnN2Ipv4Addr() const;
    void setAnN2Ipv4Addr(const QString &an_n2_ipv4_addr);
    bool is_an_n2_ipv4_addr_Set() const;
    bool is_an_n2_ipv4_addr_Valid() const;

    OAIIpv6Addr getAnN2Ipv6Addr() const;
    void setAnN2Ipv6Addr(const OAIIpv6Addr &an_n2_ipv6_addr);
    bool is_an_n2_ipv6_addr_Set() const;
    bool is_an_n2_ipv6_addr_Valid() const;

    OAIGuami getGuami() const;
    void setGuami(const OAIGuami &guami);
    bool is_guami_Set() const;
    bool is_guami_Valid() const;

    bool isNotifySourceNgRan() const;
    void setNotifySourceNgRan(const bool &notify_source_ng_ran);
    bool is_notify_source_ng_ran_Set() const;
    bool is_notify_source_ng_ran_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString n2_notify_subscription_id;
    bool m_n2_notify_subscription_id_isSet;
    bool m_n2_notify_subscription_id_isValid;

    OAIN2InfoContainer n2_info_container;
    bool m_n2_info_container_isSet;
    bool m_n2_info_container_isValid;

    QList<qint32> to_release_session_list;
    bool m_to_release_session_list_isSet;
    bool m_to_release_session_list_isValid;

    QString lcs_correlation_id;
    bool m_lcs_correlation_id_isSet;
    bool m_lcs_correlation_id_isValid;

    OAIN2InfoNotifyReason notify_reason;
    bool m_notify_reason_isSet;
    bool m_notify_reason_isValid;

    QList<OAISmfChangeInfo> smf_change_info_list;
    bool m_smf_change_info_list_isSet;
    bool m_smf_change_info_list_isValid;

    OAIGlobalRanNodeId ran_node_id;
    bool m_ran_node_id_isSet;
    bool m_ran_node_id_isValid;

    QString initial_amf_name;
    bool m_initial_amf_name_isSet;
    bool m_initial_amf_name_isValid;

    QString an_n2_ipv4_addr;
    bool m_an_n2_ipv4_addr_isSet;
    bool m_an_n2_ipv4_addr_isValid;

    OAIIpv6Addr an_n2_ipv6_addr;
    bool m_an_n2_ipv6_addr_isSet;
    bool m_an_n2_ipv6_addr_isValid;

    OAIGuami guami;
    bool m_guami_isSet;
    bool m_guami_isValid;

    bool notify_source_ng_ran;
    bool m_notify_source_ng_ran_isSet;
    bool m_notify_source_ng_ran_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIN2InformationNotification)

#endif // OAIN2InformationNotification_H
