/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUeN1N2InfoSubscriptionCreateData.h
 *
 * 
 */

#ifndef OAIUeN1N2InfoSubscriptionCreateData_H
#define OAIUeN1N2InfoSubscriptionCreateData_H

#include <QJsonObject>

#include "OAIGuami.h"
#include "OAIN1MessageClass.h"
#include "OAIN2InformationClass.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUeN1N2InfoSubscriptionCreateData : public OAIObject {
public:
    OAIUeN1N2InfoSubscriptionCreateData();
    OAIUeN1N2InfoSubscriptionCreateData(QString json);
    ~OAIUeN1N2InfoSubscriptionCreateData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIN2InformationClass getN2InformationClass() const;
    void setN2InformationClass(const OAIN2InformationClass &n2_information_class);
    bool is_n2_information_class_Set() const;
    bool is_n2_information_class_Valid() const;

    QString getN2NotifyCallbackUri() const;
    void setN2NotifyCallbackUri(const QString &n2_notify_callback_uri);
    bool is_n2_notify_callback_uri_Set() const;
    bool is_n2_notify_callback_uri_Valid() const;

    OAIN1MessageClass getN1MessageClass() const;
    void setN1MessageClass(const OAIN1MessageClass &n1_message_class);
    bool is_n1_message_class_Set() const;
    bool is_n1_message_class_Valid() const;

    QString getN1NotifyCallbackUri() const;
    void setN1NotifyCallbackUri(const QString &n1_notify_callback_uri);
    bool is_n1_notify_callback_uri_Set() const;
    bool is_n1_notify_callback_uri_Valid() const;

    QString getNfId() const;
    void setNfId(const QString &nf_id);
    bool is_nf_id_Set() const;
    bool is_nf_id_Valid() const;

    QString getSupportedFeatures() const;
    void setSupportedFeatures(const QString &supported_features);
    bool is_supported_features_Set() const;
    bool is_supported_features_Valid() const;

    OAIGuami getOldGuami() const;
    void setOldGuami(const OAIGuami &old_guami);
    bool is_old_guami_Set() const;
    bool is_old_guami_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIN2InformationClass n2_information_class;
    bool m_n2_information_class_isSet;
    bool m_n2_information_class_isValid;

    QString n2_notify_callback_uri;
    bool m_n2_notify_callback_uri_isSet;
    bool m_n2_notify_callback_uri_isValid;

    OAIN1MessageClass n1_message_class;
    bool m_n1_message_class_isSet;
    bool m_n1_message_class_isValid;

    QString n1_notify_callback_uri;
    bool m_n1_notify_callback_uri_isSet;
    bool m_n1_notify_callback_uri_isValid;

    QString nf_id;
    bool m_nf_id_isSet;
    bool m_nf_id_isValid;

    QString supported_features;
    bool m_supported_features_isSet;
    bool m_supported_features_isValid;

    OAIGuami old_guami;
    bool m_old_guami_isSet;
    bool m_old_guami_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUeN1N2InfoSubscriptionCreateData)

#endif // OAIUeN1N2InfoSubscriptionCreateData_H
