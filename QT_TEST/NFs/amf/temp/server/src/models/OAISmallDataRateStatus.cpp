/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISmallDataRateStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISmallDataRateStatus::OAISmallDataRateStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISmallDataRateStatus::OAISmallDataRateStatus() {
    this->initializeModel();
}

OAISmallDataRateStatus::~OAISmallDataRateStatus() {}

void OAISmallDataRateStatus::initializeModel() {

    m_remain_packets_ul_isSet = false;
    m_remain_packets_ul_isValid = false;

    m_remain_packets_dl_isSet = false;
    m_remain_packets_dl_isValid = false;

    m_validity_time_isSet = false;
    m_validity_time_isValid = false;

    m_remain_ex_reports_ul_isSet = false;
    m_remain_ex_reports_ul_isValid = false;

    m_remain_ex_reports_dl_isSet = false;
    m_remain_ex_reports_dl_isValid = false;
}

void OAISmallDataRateStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISmallDataRateStatus::fromJsonObject(QJsonObject json) {

    m_remain_packets_ul_isValid = ::OpenAPI::fromJsonValue(remain_packets_ul, json[QString("remainPacketsUl")]);
    m_remain_packets_ul_isSet = !json[QString("remainPacketsUl")].isNull() && m_remain_packets_ul_isValid;

    m_remain_packets_dl_isValid = ::OpenAPI::fromJsonValue(remain_packets_dl, json[QString("remainPacketsDl")]);
    m_remain_packets_dl_isSet = !json[QString("remainPacketsDl")].isNull() && m_remain_packets_dl_isValid;

    m_validity_time_isValid = ::OpenAPI::fromJsonValue(validity_time, json[QString("validityTime")]);
    m_validity_time_isSet = !json[QString("validityTime")].isNull() && m_validity_time_isValid;

    m_remain_ex_reports_ul_isValid = ::OpenAPI::fromJsonValue(remain_ex_reports_ul, json[QString("remainExReportsUl")]);
    m_remain_ex_reports_ul_isSet = !json[QString("remainExReportsUl")].isNull() && m_remain_ex_reports_ul_isValid;

    m_remain_ex_reports_dl_isValid = ::OpenAPI::fromJsonValue(remain_ex_reports_dl, json[QString("remainExReportsDl")]);
    m_remain_ex_reports_dl_isSet = !json[QString("remainExReportsDl")].isNull() && m_remain_ex_reports_dl_isValid;
}

QString OAISmallDataRateStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISmallDataRateStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_remain_packets_ul_isSet) {
        obj.insert(QString("remainPacketsUl"), ::OpenAPI::toJsonValue(remain_packets_ul));
    }
    if (m_remain_packets_dl_isSet) {
        obj.insert(QString("remainPacketsDl"), ::OpenAPI::toJsonValue(remain_packets_dl));
    }
    if (m_validity_time_isSet) {
        obj.insert(QString("validityTime"), ::OpenAPI::toJsonValue(validity_time));
    }
    if (m_remain_ex_reports_ul_isSet) {
        obj.insert(QString("remainExReportsUl"), ::OpenAPI::toJsonValue(remain_ex_reports_ul));
    }
    if (m_remain_ex_reports_dl_isSet) {
        obj.insert(QString("remainExReportsDl"), ::OpenAPI::toJsonValue(remain_ex_reports_dl));
    }
    return obj;
}

qint32 OAISmallDataRateStatus::getRemainPacketsUl() const {
    return remain_packets_ul;
}
void OAISmallDataRateStatus::setRemainPacketsUl(const qint32 &remain_packets_ul) {
    this->remain_packets_ul = remain_packets_ul;
    this->m_remain_packets_ul_isSet = true;
}

bool OAISmallDataRateStatus::is_remain_packets_ul_Set() const{
    return m_remain_packets_ul_isSet;
}

bool OAISmallDataRateStatus::is_remain_packets_ul_Valid() const{
    return m_remain_packets_ul_isValid;
}

qint32 OAISmallDataRateStatus::getRemainPacketsDl() const {
    return remain_packets_dl;
}
void OAISmallDataRateStatus::setRemainPacketsDl(const qint32 &remain_packets_dl) {
    this->remain_packets_dl = remain_packets_dl;
    this->m_remain_packets_dl_isSet = true;
}

bool OAISmallDataRateStatus::is_remain_packets_dl_Set() const{
    return m_remain_packets_dl_isSet;
}

bool OAISmallDataRateStatus::is_remain_packets_dl_Valid() const{
    return m_remain_packets_dl_isValid;
}

QDateTime OAISmallDataRateStatus::getValidityTime() const {
    return validity_time;
}
void OAISmallDataRateStatus::setValidityTime(const QDateTime &validity_time) {
    this->validity_time = validity_time;
    this->m_validity_time_isSet = true;
}

bool OAISmallDataRateStatus::is_validity_time_Set() const{
    return m_validity_time_isSet;
}

bool OAISmallDataRateStatus::is_validity_time_Valid() const{
    return m_validity_time_isValid;
}

qint32 OAISmallDataRateStatus::getRemainExReportsUl() const {
    return remain_ex_reports_ul;
}
void OAISmallDataRateStatus::setRemainExReportsUl(const qint32 &remain_ex_reports_ul) {
    this->remain_ex_reports_ul = remain_ex_reports_ul;
    this->m_remain_ex_reports_ul_isSet = true;
}

bool OAISmallDataRateStatus::is_remain_ex_reports_ul_Set() const{
    return m_remain_ex_reports_ul_isSet;
}

bool OAISmallDataRateStatus::is_remain_ex_reports_ul_Valid() const{
    return m_remain_ex_reports_ul_isValid;
}

qint32 OAISmallDataRateStatus::getRemainExReportsDl() const {
    return remain_ex_reports_dl;
}
void OAISmallDataRateStatus::setRemainExReportsDl(const qint32 &remain_ex_reports_dl) {
    this->remain_ex_reports_dl = remain_ex_reports_dl;
    this->m_remain_ex_reports_dl_isSet = true;
}

bool OAISmallDataRateStatus::is_remain_ex_reports_dl_Set() const{
    return m_remain_ex_reports_dl_isSet;
}

bool OAISmallDataRateStatus::is_remain_ex_reports_dl_Valid() const{
    return m_remain_ex_reports_dl_isValid;
}

bool OAISmallDataRateStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_remain_packets_ul_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remain_packets_dl_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validity_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remain_ex_reports_ul_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remain_ex_reports_dl_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISmallDataRateStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
