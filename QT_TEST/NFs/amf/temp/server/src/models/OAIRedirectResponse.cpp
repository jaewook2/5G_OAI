/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRedirectResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRedirectResponse::OAIRedirectResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRedirectResponse::OAIRedirectResponse() {
    this->initializeModel();
}

OAIRedirectResponse::~OAIRedirectResponse() {}

void OAIRedirectResponse::initializeModel() {

    m_cause_isSet = false;
    m_cause_isValid = false;

    m_target_scp_isSet = false;
    m_target_scp_isValid = false;
}

void OAIRedirectResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRedirectResponse::fromJsonObject(QJsonObject json) {

    m_cause_isValid = ::OpenAPI::fromJsonValue(cause, json[QString("cause")]);
    m_cause_isSet = !json[QString("cause")].isNull() && m_cause_isValid;

    m_target_scp_isValid = ::OpenAPI::fromJsonValue(target_scp, json[QString("targetScp")]);
    m_target_scp_isSet = !json[QString("targetScp")].isNull() && m_target_scp_isValid;
}

QString OAIRedirectResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRedirectResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_cause_isSet) {
        obj.insert(QString("cause"), ::OpenAPI::toJsonValue(cause));
    }
    if (m_target_scp_isSet) {
        obj.insert(QString("targetScp"), ::OpenAPI::toJsonValue(target_scp));
    }
    return obj;
}

QString OAIRedirectResponse::getCause() const {
    return cause;
}
void OAIRedirectResponse::setCause(const QString &cause) {
    this->cause = cause;
    this->m_cause_isSet = true;
}

bool OAIRedirectResponse::is_cause_Set() const{
    return m_cause_isSet;
}

bool OAIRedirectResponse::is_cause_Valid() const{
    return m_cause_isValid;
}

QString OAIRedirectResponse::getTargetScp() const {
    return target_scp;
}
void OAIRedirectResponse::setTargetScp(const QString &target_scp) {
    this->target_scp = target_scp;
    this->m_target_scp_isSet = true;
}

bool OAIRedirectResponse::is_target_scp_Set() const{
    return m_target_scp_isSet;
}

bool OAIRedirectResponse::is_target_scp_Valid() const{
    return m_target_scp_isValid;
}

bool OAIRedirectResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cause_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_scp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRedirectResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
