/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINonUeN2InfoSubscriptionCreateData.h
 *
 * 
 */

#ifndef OAINonUeN2InfoSubscriptionCreateData_H
#define OAINonUeN2InfoSubscriptionCreateData_H

#include <QJsonObject>

#include "OAIAccessType.h"
#include "OAIGlobalRanNodeId.h"
#include "OAIN2InformationClass.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINonUeN2InfoSubscriptionCreateData : public OAIObject {
public:
    OAINonUeN2InfoSubscriptionCreateData();
    OAINonUeN2InfoSubscriptionCreateData(QString json);
    ~OAINonUeN2InfoSubscriptionCreateData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGlobalRanNodeId> getGlobalRanNodeList() const;
    void setGlobalRanNodeList(const QList<OAIGlobalRanNodeId> &global_ran_node_list);
    bool is_global_ran_node_list_Set() const;
    bool is_global_ran_node_list_Valid() const;

    QList<OAIAccessType> getAnTypeList() const;
    void setAnTypeList(const QList<OAIAccessType> &an_type_list);
    bool is_an_type_list_Set() const;
    bool is_an_type_list_Valid() const;

    OAIN2InformationClass getN2InformationClass() const;
    void setN2InformationClass(const OAIN2InformationClass &n2_information_class);
    bool is_n2_information_class_Set() const;
    bool is_n2_information_class_Valid() const;

    QString getN2NotifyCallbackUri() const;
    void setN2NotifyCallbackUri(const QString &n2_notify_callback_uri);
    bool is_n2_notify_callback_uri_Set() const;
    bool is_n2_notify_callback_uri_Valid() const;

    QString getNfId() const;
    void setNfId(const QString &nf_id);
    bool is_nf_id_Set() const;
    bool is_nf_id_Valid() const;

    QString getSupportedFeatures() const;
    void setSupportedFeatures(const QString &supported_features);
    bool is_supported_features_Set() const;
    bool is_supported_features_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGlobalRanNodeId> global_ran_node_list;
    bool m_global_ran_node_list_isSet;
    bool m_global_ran_node_list_isValid;

    QList<OAIAccessType> an_type_list;
    bool m_an_type_list_isSet;
    bool m_an_type_list_isValid;

    OAIN2InformationClass n2_information_class;
    bool m_n2_information_class_isSet;
    bool m_n2_information_class_isValid;

    QString n2_notify_callback_uri;
    bool m_n2_notify_callback_uri_isSet;
    bool m_n2_notify_callback_uri_isValid;

    QString nf_id;
    bool m_nf_id_isSet;
    bool m_nf_id_isValid;

    QString supported_features;
    bool m_supported_features_isSet;
    bool m_supported_features_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINonUeN2InfoSubscriptionCreateData)

#endif // OAINonUeN2InfoSubscriptionCreateData_H
