/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportIntervalNrMdt_anyOf.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportIntervalNrMdt_anyOf::OAIReportIntervalNrMdt_anyOf(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportIntervalNrMdt_anyOf::OAIReportIntervalNrMdt_anyOf() {
    this->initializeModel();
}

OAIReportIntervalNrMdt_anyOf::~OAIReportIntervalNrMdt_anyOf() {}

void OAIReportIntervalNrMdt_anyOf::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIReportIntervalNrMdt_anyOf::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIReportIntervalNrMdt_anyOf::fromJson(QString jsonString) {
    
    if ( jsonString.compare("120", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_120;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("240", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_240;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("480", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_480;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("640", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_640;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("1024", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_1024;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("2048", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_2048;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("5120", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_5120;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("10240", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_10240;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("20480", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_20480;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("40960", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_40960;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("60000", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_60000;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("360000", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_360000;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("720000", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_720000;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("1800000", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_1800000;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("3600000", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReportIntervalNrMdt_anyOf::_3600000;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIReportIntervalNrMdt_anyOf::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIReportIntervalNrMdt_anyOf::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIReportIntervalNrMdt_anyOf::_120:
            val = "120";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_240:
            val = "240";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_480:
            val = "480";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_640:
            val = "640";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_1024:
            val = "1024";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_2048:
            val = "2048";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_5120:
            val = "5120";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_10240:
            val = "10240";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_20480:
            val = "20480";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_40960:
            val = "40960";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_60000:
            val = "60000";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_360000:
            val = "360000";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_720000:
            val = "720000";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_1800000:
            val = "1800000";
            break;
        case eOAIReportIntervalNrMdt_anyOf::_3600000:
            val = "3600000";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIReportIntervalNrMdt_anyOf::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIReportIntervalNrMdt_anyOf::eOAIReportIntervalNrMdt_anyOf OAIReportIntervalNrMdt_anyOf::getValue() const {
    return m_value;
}

void OAIReportIntervalNrMdt_anyOf::setValue(const OAIReportIntervalNrMdt_anyOf::eOAIReportIntervalNrMdt_anyOf& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIReportIntervalNrMdt_anyOf::isSet() const {
    
    return m_value_isSet;
}

bool OAIReportIntervalNrMdt_anyOf::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
