/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINssaiMapping.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINssaiMapping::OAINssaiMapping(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINssaiMapping::OAINssaiMapping() {
    this->initializeModel();
}

OAINssaiMapping::~OAINssaiMapping() {}

void OAINssaiMapping::initializeModel() {

    m_mapped_snssai_isSet = false;
    m_mapped_snssai_isValid = false;

    m_h_snssai_isSet = false;
    m_h_snssai_isValid = false;
}

void OAINssaiMapping::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINssaiMapping::fromJsonObject(QJsonObject json) {

    m_mapped_snssai_isValid = ::OpenAPI::fromJsonValue(mapped_snssai, json[QString("mappedSnssai")]);
    m_mapped_snssai_isSet = !json[QString("mappedSnssai")].isNull() && m_mapped_snssai_isValid;

    m_h_snssai_isValid = ::OpenAPI::fromJsonValue(h_snssai, json[QString("hSnssai")]);
    m_h_snssai_isSet = !json[QString("hSnssai")].isNull() && m_h_snssai_isValid;
}

QString OAINssaiMapping::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINssaiMapping::asJsonObject() const {
    QJsonObject obj;
    if (mapped_snssai.isSet()) {
        obj.insert(QString("mappedSnssai"), ::OpenAPI::toJsonValue(mapped_snssai));
    }
    if (h_snssai.isSet()) {
        obj.insert(QString("hSnssai"), ::OpenAPI::toJsonValue(h_snssai));
    }
    return obj;
}

OAISnssai OAINssaiMapping::getMappedSnssai() const {
    return mapped_snssai;
}
void OAINssaiMapping::setMappedSnssai(const OAISnssai &mapped_snssai) {
    this->mapped_snssai = mapped_snssai;
    this->m_mapped_snssai_isSet = true;
}

bool OAINssaiMapping::is_mapped_snssai_Set() const{
    return m_mapped_snssai_isSet;
}

bool OAINssaiMapping::is_mapped_snssai_Valid() const{
    return m_mapped_snssai_isValid;
}

OAISnssai OAINssaiMapping::getHSnssai() const {
    return h_snssai;
}
void OAINssaiMapping::setHSnssai(const OAISnssai &h_snssai) {
    this->h_snssai = h_snssai;
    this->m_h_snssai_isSet = true;
}

bool OAINssaiMapping::is_h_snssai_Set() const{
    return m_h_snssai_isSet;
}

bool OAINssaiMapping::is_h_snssai_Valid() const{
    return m_h_snssai_isValid;
}

bool OAINssaiMapping::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (mapped_snssai.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (h_snssai.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINssaiMapping::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_mapped_snssai_isValid && m_h_snssai_isValid && true;
}

} // namespace OpenAPI
