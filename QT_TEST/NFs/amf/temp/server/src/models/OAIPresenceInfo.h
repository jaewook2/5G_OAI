/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPresenceInfo.h
 *
 * 
 */

#ifndef OAIPresenceInfo_H
#define OAIPresenceInfo_H

#include <QJsonObject>

#include "OAIEcgi.h"
#include "OAIGlobalRanNodeId.h"
#include "OAINcgi.h"
#include "OAIPresenceState.h"
#include "OAITai.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPresenceInfo : public OAIObject {
public:
    OAIPresenceInfo();
    OAIPresenceInfo(QString json);
    ~OAIPresenceInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPraId() const;
    void setPraId(const QString &pra_id);
    bool is_pra_id_Set() const;
    bool is_pra_id_Valid() const;

    QString getAdditionalPraId() const;
    void setAdditionalPraId(const QString &additional_pra_id);
    bool is_additional_pra_id_Set() const;
    bool is_additional_pra_id_Valid() const;

    OAIPresenceState getPresenceState() const;
    void setPresenceState(const OAIPresenceState &presence_state);
    bool is_presence_state_Set() const;
    bool is_presence_state_Valid() const;

    QList<OAITai> getTrackingAreaList() const;
    void setTrackingAreaList(const QList<OAITai> &tracking_area_list);
    bool is_tracking_area_list_Set() const;
    bool is_tracking_area_list_Valid() const;

    QList<OAIEcgi> getEcgiList() const;
    void setEcgiList(const QList<OAIEcgi> &ecgi_list);
    bool is_ecgi_list_Set() const;
    bool is_ecgi_list_Valid() const;

    QList<OAINcgi> getNcgiList() const;
    void setNcgiList(const QList<OAINcgi> &ncgi_list);
    bool is_ncgi_list_Set() const;
    bool is_ncgi_list_Valid() const;

    QList<OAIGlobalRanNodeId> getGlobalRanNodeIdList() const;
    void setGlobalRanNodeIdList(const QList<OAIGlobalRanNodeId> &global_ran_node_id_list);
    bool is_global_ran_node_id_list_Set() const;
    bool is_global_ran_node_id_list_Valid() const;

    QList<OAIGlobalRanNodeId> getGlobaleNbIdList() const;
    void setGlobaleNbIdList(const QList<OAIGlobalRanNodeId> &globale_nb_id_list);
    bool is_globale_nb_id_list_Set() const;
    bool is_globale_nb_id_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString pra_id;
    bool m_pra_id_isSet;
    bool m_pra_id_isValid;

    QString additional_pra_id;
    bool m_additional_pra_id_isSet;
    bool m_additional_pra_id_isValid;

    OAIPresenceState presence_state;
    bool m_presence_state_isSet;
    bool m_presence_state_isValid;

    QList<OAITai> tracking_area_list;
    bool m_tracking_area_list_isSet;
    bool m_tracking_area_list_isValid;

    QList<OAIEcgi> ecgi_list;
    bool m_ecgi_list_isSet;
    bool m_ecgi_list_isValid;

    QList<OAINcgi> ncgi_list;
    bool m_ncgi_list_isSet;
    bool m_ncgi_list_isValid;

    QList<OAIGlobalRanNodeId> global_ran_node_id_list;
    bool m_global_ran_node_id_list_isSet;
    bool m_global_ran_node_id_list_isValid;

    QList<OAIGlobalRanNodeId> globale_nb_id_list;
    bool m_globale_nb_id_list_isSet;
    bool m_globale_nb_id_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPresenceInfo)

#endif // OAIPresenceInfo_H
