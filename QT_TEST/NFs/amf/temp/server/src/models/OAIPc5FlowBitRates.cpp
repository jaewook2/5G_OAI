/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPc5FlowBitRates.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPc5FlowBitRates::OAIPc5FlowBitRates(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPc5FlowBitRates::OAIPc5FlowBitRates() {
    this->initializeModel();
}

OAIPc5FlowBitRates::~OAIPc5FlowBitRates() {}

void OAIPc5FlowBitRates::initializeModel() {

    m_gua_fbr_isSet = false;
    m_gua_fbr_isValid = false;

    m_max_fbr_isSet = false;
    m_max_fbr_isValid = false;
}

void OAIPc5FlowBitRates::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPc5FlowBitRates::fromJsonObject(QJsonObject json) {

    m_gua_fbr_isValid = ::OpenAPI::fromJsonValue(gua_fbr, json[QString("guaFbr")]);
    m_gua_fbr_isSet = !json[QString("guaFbr")].isNull() && m_gua_fbr_isValid;

    m_max_fbr_isValid = ::OpenAPI::fromJsonValue(max_fbr, json[QString("maxFbr")]);
    m_max_fbr_isSet = !json[QString("maxFbr")].isNull() && m_max_fbr_isValid;
}

QString OAIPc5FlowBitRates::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPc5FlowBitRates::asJsonObject() const {
    QJsonObject obj;
    if (m_gua_fbr_isSet) {
        obj.insert(QString("guaFbr"), ::OpenAPI::toJsonValue(gua_fbr));
    }
    if (m_max_fbr_isSet) {
        obj.insert(QString("maxFbr"), ::OpenAPI::toJsonValue(max_fbr));
    }
    return obj;
}

QString OAIPc5FlowBitRates::getGuaFbr() const {
    return gua_fbr;
}
void OAIPc5FlowBitRates::setGuaFbr(const QString &gua_fbr) {
    this->gua_fbr = gua_fbr;
    this->m_gua_fbr_isSet = true;
}

bool OAIPc5FlowBitRates::is_gua_fbr_Set() const{
    return m_gua_fbr_isSet;
}

bool OAIPc5FlowBitRates::is_gua_fbr_Valid() const{
    return m_gua_fbr_isValid;
}

QString OAIPc5FlowBitRates::getMaxFbr() const {
    return max_fbr;
}
void OAIPc5FlowBitRates::setMaxFbr(const QString &max_fbr) {
    this->max_fbr = max_fbr;
    this->m_max_fbr_isSet = true;
}

bool OAIPc5FlowBitRates::is_max_fbr_Set() const{
    return m_max_fbr_isSet;
}

bool OAIPc5FlowBitRates::is_max_fbr_Valid() const{
    return m_max_fbr_isValid;
}

bool OAIPc5FlowBitRates::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gua_fbr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_fbr_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPc5FlowBitRates::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
