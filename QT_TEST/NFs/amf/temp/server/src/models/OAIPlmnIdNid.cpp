/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlmnIdNid.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlmnIdNid::OAIPlmnIdNid(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlmnIdNid::OAIPlmnIdNid() {
    this->initializeModel();
}

OAIPlmnIdNid::~OAIPlmnIdNid() {}

void OAIPlmnIdNid::initializeModel() {

    m_mcc_isSet = false;
    m_mcc_isValid = false;

    m_mnc_isSet = false;
    m_mnc_isValid = false;

    m_nid_isSet = false;
    m_nid_isValid = false;
}

void OAIPlmnIdNid::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPlmnIdNid::fromJsonObject(QJsonObject json) {

    m_mcc_isValid = ::OpenAPI::fromJsonValue(mcc, json[QString("mcc")]);
    m_mcc_isSet = !json[QString("mcc")].isNull() && m_mcc_isValid;

    m_mnc_isValid = ::OpenAPI::fromJsonValue(mnc, json[QString("mnc")]);
    m_mnc_isSet = !json[QString("mnc")].isNull() && m_mnc_isValid;

    m_nid_isValid = ::OpenAPI::fromJsonValue(nid, json[QString("nid")]);
    m_nid_isSet = !json[QString("nid")].isNull() && m_nid_isValid;
}

QString OAIPlmnIdNid::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPlmnIdNid::asJsonObject() const {
    QJsonObject obj;
    if (m_mcc_isSet) {
        obj.insert(QString("mcc"), ::OpenAPI::toJsonValue(mcc));
    }
    if (m_mnc_isSet) {
        obj.insert(QString("mnc"), ::OpenAPI::toJsonValue(mnc));
    }
    if (m_nid_isSet) {
        obj.insert(QString("nid"), ::OpenAPI::toJsonValue(nid));
    }
    return obj;
}

QString OAIPlmnIdNid::getMcc() const {
    return mcc;
}
void OAIPlmnIdNid::setMcc(const QString &mcc) {
    this->mcc = mcc;
    this->m_mcc_isSet = true;
}

bool OAIPlmnIdNid::is_mcc_Set() const{
    return m_mcc_isSet;
}

bool OAIPlmnIdNid::is_mcc_Valid() const{
    return m_mcc_isValid;
}

QString OAIPlmnIdNid::getMnc() const {
    return mnc;
}
void OAIPlmnIdNid::setMnc(const QString &mnc) {
    this->mnc = mnc;
    this->m_mnc_isSet = true;
}

bool OAIPlmnIdNid::is_mnc_Set() const{
    return m_mnc_isSet;
}

bool OAIPlmnIdNid::is_mnc_Valid() const{
    return m_mnc_isValid;
}

QString OAIPlmnIdNid::getNid() const {
    return nid;
}
void OAIPlmnIdNid::setNid(const QString &nid) {
    this->nid = nid;
    this->m_nid_isSet = true;
}

bool OAIPlmnIdNid::is_nid_Set() const{
    return m_nid_isSet;
}

bool OAIPlmnIdNid::is_nid_Valid() const{
    return m_nid_isValid;
}

bool OAIPlmnIdNid::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mcc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPlmnIdNid::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_mcc_isValid && m_mnc_isValid && true;
}

} // namespace OpenAPI
