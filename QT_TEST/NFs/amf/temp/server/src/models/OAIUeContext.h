/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUeContext.h
 *
 * 
 */

#ifndef OAIUeContext_H
#define OAIUeContext_H

#include <QJsonObject>

#include "OAIAmbr.h"
#include "OAIArea.h"
#include "OAICagData.h"
#include "OAICoreNetworkType.h"
#include "OAIEcRestrictionDataWb.h"
#include "OAIExtAmfEventSubscription.h"
#include "OAIImmediateMdtConf.h"
#include "OAIMmContext.h"
#include "OAIMoExpDataCounter.h"
#include "OAIPduSessionContext.h"
#include "OAIPolicyReqTrigger.h"
#include "OAIPresenceInfo.h"
#include "OAIRatType.h"
#include "OAISbiBindingLevel.h"
#include "OAISeafData.h"
#include "OAIServiceAreaRestriction.h"
#include "OAISmallDataRateStatusInfo.h"
#include "OAITraceData.h"
#include "OAIUpdpSubscriptionData.h"
#include "OAIV2xContext.h"
#include <QByteArray>
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUeContext : public OAIObject {
public:
    OAIUeContext();
    OAIUeContext(QString json);
    ~OAIUeContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSupi() const;
    void setSupi(const QString &supi);
    bool is_supi_Set() const;
    bool is_supi_Valid() const;

    bool isSupiUnauthInd() const;
    void setSupiUnauthInd(const bool &supi_unauth_ind);
    bool is_supi_unauth_ind_Set() const;
    bool is_supi_unauth_ind_Valid() const;

    QList<QString> getGpsiList() const;
    void setGpsiList(const QList<QString> &gpsi_list);
    bool is_gpsi_list_Set() const;
    bool is_gpsi_list_Valid() const;

    QString getPei() const;
    void setPei(const QString &pei);
    bool is_pei_Set() const;
    bool is_pei_Valid() const;

    QString getUdmGroupId() const;
    void setUdmGroupId(const QString &udm_group_id);
    bool is_udm_group_id_Set() const;
    bool is_udm_group_id_Valid() const;

    QString getAusfGroupId() const;
    void setAusfGroupId(const QString &ausf_group_id);
    bool is_ausf_group_id_Set() const;
    bool is_ausf_group_id_Valid() const;

    QString getPcfGroupId() const;
    void setPcfGroupId(const QString &pcf_group_id);
    bool is_pcf_group_id_Set() const;
    bool is_pcf_group_id_Valid() const;

    QString getRoutingIndicator() const;
    void setRoutingIndicator(const QString &routing_indicator);
    bool is_routing_indicator_Set() const;
    bool is_routing_indicator_Valid() const;

    QList<QString> getGroupList() const;
    void setGroupList(const QList<QString> &group_list);
    bool is_group_list_Set() const;
    bool is_group_list_Valid() const;

    QByteArray getDrxParameter() const;
    void setDrxParameter(const QByteArray &drx_parameter);
    bool is_drx_parameter_Set() const;
    bool is_drx_parameter_Valid() const;

    qint32 getSubRfsp() const;
    void setSubRfsp(const qint32 &sub_rfsp);
    bool is_sub_rfsp_Set() const;
    bool is_sub_rfsp_Valid() const;

    qint32 getUsedRfsp() const;
    void setUsedRfsp(const qint32 &used_rfsp);
    bool is_used_rfsp_Set() const;
    bool is_used_rfsp_Valid() const;

    OAIAmbr getSubUeAmbr() const;
    void setSubUeAmbr(const OAIAmbr &sub_ue_ambr);
    bool is_sub_ue_ambr_Set() const;
    bool is_sub_ue_ambr_Valid() const;

    QString getSmsfId() const;
    void setSmsfId(const QString &smsf_id);
    bool is_smsf_id_Set() const;
    bool is_smsf_id_Valid() const;

    OAISeafData getSeafData() const;
    void setSeafData(const OAISeafData &seaf_data);
    bool is_seaf_data_Set() const;
    bool is_seaf_data_Valid() const;

    QByteArray getR5gMmCapability() const;
    void setR5gMmCapability(const QByteArray &r_5g_mm_capability);
    bool is_r_5g_mm_capability_Set() const;
    bool is_r_5g_mm_capability_Valid() const;

    QString getPcfId() const;
    void setPcfId(const QString &pcf_id);
    bool is_pcf_id_Set() const;
    bool is_pcf_id_Valid() const;

    QString getPcfSetId() const;
    void setPcfSetId(const QString &pcf_set_id);
    bool is_pcf_set_id_Set() const;
    bool is_pcf_set_id_Valid() const;

    QString getPcfAmpServiceSetId() const;
    void setPcfAmpServiceSetId(const QString &pcf_amp_service_set_id);
    bool is_pcf_amp_service_set_id_Set() const;
    bool is_pcf_amp_service_set_id_Valid() const;

    QString getPcfUepServiceSetId() const;
    void setPcfUepServiceSetId(const QString &pcf_uep_service_set_id);
    bool is_pcf_uep_service_set_id_Set() const;
    bool is_pcf_uep_service_set_id_Valid() const;

    OAISbiBindingLevel getPcfBinding() const;
    void setPcfBinding(const OAISbiBindingLevel &pcf_binding);
    bool is_pcf_binding_Set() const;
    bool is_pcf_binding_Valid() const;

    QString getPcfAmPolicyUri() const;
    void setPcfAmPolicyUri(const QString &pcf_am_policy_uri);
    bool is_pcf_am_policy_uri_Set() const;
    bool is_pcf_am_policy_uri_Valid() const;

    QList<OAIPolicyReqTrigger> getAmPolicyReqTriggerList() const;
    void setAmPolicyReqTriggerList(const QList<OAIPolicyReqTrigger> &am_policy_req_trigger_list);
    bool is_am_policy_req_trigger_list_Set() const;
    bool is_am_policy_req_trigger_list_Valid() const;

    QString getPcfUePolicyUri() const;
    void setPcfUePolicyUri(const QString &pcf_ue_policy_uri);
    bool is_pcf_ue_policy_uri_Set() const;
    bool is_pcf_ue_policy_uri_Valid() const;

    QList<OAIPolicyReqTrigger> getUePolicyReqTriggerList() const;
    void setUePolicyReqTriggerList(const QList<OAIPolicyReqTrigger> &ue_policy_req_trigger_list);
    bool is_ue_policy_req_trigger_list_Set() const;
    bool is_ue_policy_req_trigger_list_Valid() const;

    QString getHpcfId() const;
    void setHpcfId(const QString &hpcf_id);
    bool is_hpcf_id_Set() const;
    bool is_hpcf_id_Valid() const;

    QString getHpcfSetId() const;
    void setHpcfSetId(const QString &hpcf_set_id);
    bool is_hpcf_set_id_Set() const;
    bool is_hpcf_set_id_Valid() const;

    QList<OAIRatType> getRestrictedRatList() const;
    void setRestrictedRatList(const QList<OAIRatType> &restricted_rat_list);
    bool is_restricted_rat_list_Set() const;
    bool is_restricted_rat_list_Valid() const;

    QList<OAIArea> getForbiddenAreaList() const;
    void setForbiddenAreaList(const QList<OAIArea> &forbidden_area_list);
    bool is_forbidden_area_list_Set() const;
    bool is_forbidden_area_list_Valid() const;

    OAIServiceAreaRestriction getServiceAreaRestriction() const;
    void setServiceAreaRestriction(const OAIServiceAreaRestriction &service_area_restriction);
    bool is_service_area_restriction_Set() const;
    bool is_service_area_restriction_Valid() const;

    QList<OAICoreNetworkType> getRestrictedCoreNwTypeList() const;
    void setRestrictedCoreNwTypeList(const QList<OAICoreNetworkType> &restricted_core_nw_type_list);
    bool is_restricted_core_nw_type_list_Set() const;
    bool is_restricted_core_nw_type_list_Valid() const;

    QList<OAIExtAmfEventSubscription> getEventSubscriptionList() const;
    void setEventSubscriptionList(const QList<OAIExtAmfEventSubscription> &event_subscription_list);
    bool is_event_subscription_list_Set() const;
    bool is_event_subscription_list_Valid() const;

    QList<OAIMmContext> getMmContextList() const;
    void setMmContextList(const QList<OAIMmContext> &mm_context_list);
    bool is_mm_context_list_Set() const;
    bool is_mm_context_list_Valid() const;

    QList<OAIPduSessionContext> getSessionContextList() const;
    void setSessionContextList(const QList<OAIPduSessionContext> &session_context_list);
    bool is_session_context_list_Set() const;
    bool is_session_context_list_Valid() const;

    OAITraceData getTraceData() const;
    void setTraceData(const OAITraceData &trace_data);
    bool is_trace_data_Set() const;
    bool is_trace_data_Valid() const;

    QDateTime getServiceGapExpiryTime() const;
    void setServiceGapExpiryTime(const QDateTime &service_gap_expiry_time);
    bool is_service_gap_expiry_time_Set() const;
    bool is_service_gap_expiry_time_Valid() const;

    QString getStnSr() const;
    void setStnSr(const QString &stn_sr);
    bool is_stn_sr_Set() const;
    bool is_stn_sr_Valid() const;

    QString getCMsisdn() const;
    void setCMsisdn(const QString &c_msisdn);
    bool is_c_msisdn_Set() const;
    bool is_c_msisdn_Valid() const;

    QByteArray getMsClassmark2() const;
    void setMsClassmark2(const QByteArray &ms_classmark2);
    bool is_ms_classmark2_Set() const;
    bool is_ms_classmark2_Valid() const;

    QList<QByteArray> getSupportedCodecList() const;
    void setSupportedCodecList(const QList<QByteArray> &supported_codec_list);
    bool is_supported_codec_list_Set() const;
    bool is_supported_codec_list_Valid() const;

    QList<OAISmallDataRateStatusInfo> getSmallDataRateStatusInfos() const;
    void setSmallDataRateStatusInfos(const QList<OAISmallDataRateStatusInfo> &small_data_rate_status_infos);
    bool is_small_data_rate_status_infos_Set() const;
    bool is_small_data_rate_status_infos_Valid() const;

    QList<OAIRatType> getRestrictedPrimaryRatList() const;
    void setRestrictedPrimaryRatList(const QList<OAIRatType> &restricted_primary_rat_list);
    bool is_restricted_primary_rat_list_Set() const;
    bool is_restricted_primary_rat_list_Valid() const;

    QList<OAIRatType> getRestrictedSecondaryRatList() const;
    void setRestrictedSecondaryRatList(const QList<OAIRatType> &restricted_secondary_rat_list);
    bool is_restricted_secondary_rat_list_Set() const;
    bool is_restricted_secondary_rat_list_Valid() const;

    OAIV2xContext getV2xContext() const;
    void setV2xContext(const OAIV2xContext &v2x_context);
    bool is_v2x_context_Set() const;
    bool is_v2x_context_Valid() const;

    bool isLteCatMInd() const;
    void setLteCatMInd(const bool &lte_cat_m_ind);
    bool is_lte_cat_m_ind_Set() const;
    bool is_lte_cat_m_ind_Valid() const;

    OAIMoExpDataCounter getMoExpDataCounter() const;
    void setMoExpDataCounter(const OAIMoExpDataCounter &mo_exp_data_counter);
    bool is_mo_exp_data_counter_Set() const;
    bool is_mo_exp_data_counter_Valid() const;

    OAICagData getCagData() const;
    void setCagData(const OAICagData &cag_data);
    bool is_cag_data_Set() const;
    bool is_cag_data_Valid() const;

    bool isManagementMdtInd() const;
    void setManagementMdtInd(const bool &management_mdt_ind);
    bool is_management_mdt_ind_Set() const;
    bool is_management_mdt_ind_Valid() const;

    OAIImmediateMdtConf getImmediateMdtConf() const;
    void setImmediateMdtConf(const OAIImmediateMdtConf &immediate_mdt_conf);
    bool is_immediate_mdt_conf_Set() const;
    bool is_immediate_mdt_conf_Valid() const;

    OAIEcRestrictionDataWb getEcRestrictionDataWb() const;
    void setEcRestrictionDataWb(const OAIEcRestrictionDataWb &ec_restriction_data_wb);
    bool is_ec_restriction_data_wb_Set() const;
    bool is_ec_restriction_data_wb_Valid() const;

    bool isEcRestrictionDataNb() const;
    void setEcRestrictionDataNb(const bool &ec_restriction_data_nb);
    bool is_ec_restriction_data_nb_Set() const;
    bool is_ec_restriction_data_nb_Valid() const;

    bool isIabOperationAllowed() const;
    void setIabOperationAllowed(const bool &iab_operation_allowed);
    bool is_iab_operation_allowed_Set() const;
    bool is_iab_operation_allowed_Valid() const;

    OAIServiceAreaRestriction getUsedServiceAreaRestriction() const;
    void setUsedServiceAreaRestriction(const OAIServiceAreaRestriction &used_service_area_restriction);
    bool is_used_service_area_restriction_Set() const;
    bool is_used_service_area_restriction_Valid() const;

    QMap<QString, OAIPresenceInfo> getPraInAmPolicy() const;
    void setPraInAmPolicy(const QMap<QString, OAIPresenceInfo> &pra_in_am_policy);
    bool is_pra_in_am_policy_Set() const;
    bool is_pra_in_am_policy_Valid() const;

    OAIUpdpSubscriptionData getUpdpSubscriptionData() const;
    void setUpdpSubscriptionData(const OAIUpdpSubscriptionData &updp_subscription_data);
    bool is_updp_subscription_data_Set() const;
    bool is_updp_subscription_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString supi;
    bool m_supi_isSet;
    bool m_supi_isValid;

    bool supi_unauth_ind;
    bool m_supi_unauth_ind_isSet;
    bool m_supi_unauth_ind_isValid;

    QList<QString> gpsi_list;
    bool m_gpsi_list_isSet;
    bool m_gpsi_list_isValid;

    QString pei;
    bool m_pei_isSet;
    bool m_pei_isValid;

    QString udm_group_id;
    bool m_udm_group_id_isSet;
    bool m_udm_group_id_isValid;

    QString ausf_group_id;
    bool m_ausf_group_id_isSet;
    bool m_ausf_group_id_isValid;

    QString pcf_group_id;
    bool m_pcf_group_id_isSet;
    bool m_pcf_group_id_isValid;

    QString routing_indicator;
    bool m_routing_indicator_isSet;
    bool m_routing_indicator_isValid;

    QList<QString> group_list;
    bool m_group_list_isSet;
    bool m_group_list_isValid;

    QByteArray drx_parameter;
    bool m_drx_parameter_isSet;
    bool m_drx_parameter_isValid;

    qint32 sub_rfsp;
    bool m_sub_rfsp_isSet;
    bool m_sub_rfsp_isValid;

    qint32 used_rfsp;
    bool m_used_rfsp_isSet;
    bool m_used_rfsp_isValid;

    OAIAmbr sub_ue_ambr;
    bool m_sub_ue_ambr_isSet;
    bool m_sub_ue_ambr_isValid;

    QString smsf_id;
    bool m_smsf_id_isSet;
    bool m_smsf_id_isValid;

    OAISeafData seaf_data;
    bool m_seaf_data_isSet;
    bool m_seaf_data_isValid;

    QByteArray r_5g_mm_capability;
    bool m_r_5g_mm_capability_isSet;
    bool m_r_5g_mm_capability_isValid;

    QString pcf_id;
    bool m_pcf_id_isSet;
    bool m_pcf_id_isValid;

    QString pcf_set_id;
    bool m_pcf_set_id_isSet;
    bool m_pcf_set_id_isValid;

    QString pcf_amp_service_set_id;
    bool m_pcf_amp_service_set_id_isSet;
    bool m_pcf_amp_service_set_id_isValid;

    QString pcf_uep_service_set_id;
    bool m_pcf_uep_service_set_id_isSet;
    bool m_pcf_uep_service_set_id_isValid;

    OAISbiBindingLevel pcf_binding;
    bool m_pcf_binding_isSet;
    bool m_pcf_binding_isValid;

    QString pcf_am_policy_uri;
    bool m_pcf_am_policy_uri_isSet;
    bool m_pcf_am_policy_uri_isValid;

    QList<OAIPolicyReqTrigger> am_policy_req_trigger_list;
    bool m_am_policy_req_trigger_list_isSet;
    bool m_am_policy_req_trigger_list_isValid;

    QString pcf_ue_policy_uri;
    bool m_pcf_ue_policy_uri_isSet;
    bool m_pcf_ue_policy_uri_isValid;

    QList<OAIPolicyReqTrigger> ue_policy_req_trigger_list;
    bool m_ue_policy_req_trigger_list_isSet;
    bool m_ue_policy_req_trigger_list_isValid;

    QString hpcf_id;
    bool m_hpcf_id_isSet;
    bool m_hpcf_id_isValid;

    QString hpcf_set_id;
    bool m_hpcf_set_id_isSet;
    bool m_hpcf_set_id_isValid;

    QList<OAIRatType> restricted_rat_list;
    bool m_restricted_rat_list_isSet;
    bool m_restricted_rat_list_isValid;

    QList<OAIArea> forbidden_area_list;
    bool m_forbidden_area_list_isSet;
    bool m_forbidden_area_list_isValid;

    OAIServiceAreaRestriction service_area_restriction;
    bool m_service_area_restriction_isSet;
    bool m_service_area_restriction_isValid;

    QList<OAICoreNetworkType> restricted_core_nw_type_list;
    bool m_restricted_core_nw_type_list_isSet;
    bool m_restricted_core_nw_type_list_isValid;

    QList<OAIExtAmfEventSubscription> event_subscription_list;
    bool m_event_subscription_list_isSet;
    bool m_event_subscription_list_isValid;

    QList<OAIMmContext> mm_context_list;
    bool m_mm_context_list_isSet;
    bool m_mm_context_list_isValid;

    QList<OAIPduSessionContext> session_context_list;
    bool m_session_context_list_isSet;
    bool m_session_context_list_isValid;

    OAITraceData trace_data;
    bool m_trace_data_isSet;
    bool m_trace_data_isValid;

    QDateTime service_gap_expiry_time;
    bool m_service_gap_expiry_time_isSet;
    bool m_service_gap_expiry_time_isValid;

    QString stn_sr;
    bool m_stn_sr_isSet;
    bool m_stn_sr_isValid;

    QString c_msisdn;
    bool m_c_msisdn_isSet;
    bool m_c_msisdn_isValid;

    QByteArray ms_classmark2;
    bool m_ms_classmark2_isSet;
    bool m_ms_classmark2_isValid;

    QList<QByteArray> supported_codec_list;
    bool m_supported_codec_list_isSet;
    bool m_supported_codec_list_isValid;

    QList<OAISmallDataRateStatusInfo> small_data_rate_status_infos;
    bool m_small_data_rate_status_infos_isSet;
    bool m_small_data_rate_status_infos_isValid;

    QList<OAIRatType> restricted_primary_rat_list;
    bool m_restricted_primary_rat_list_isSet;
    bool m_restricted_primary_rat_list_isValid;

    QList<OAIRatType> restricted_secondary_rat_list;
    bool m_restricted_secondary_rat_list_isSet;
    bool m_restricted_secondary_rat_list_isValid;

    OAIV2xContext v2x_context;
    bool m_v2x_context_isSet;
    bool m_v2x_context_isValid;

    bool lte_cat_m_ind;
    bool m_lte_cat_m_ind_isSet;
    bool m_lte_cat_m_ind_isValid;

    OAIMoExpDataCounter mo_exp_data_counter;
    bool m_mo_exp_data_counter_isSet;
    bool m_mo_exp_data_counter_isValid;

    OAICagData cag_data;
    bool m_cag_data_isSet;
    bool m_cag_data_isValid;

    bool management_mdt_ind;
    bool m_management_mdt_ind_isSet;
    bool m_management_mdt_ind_isValid;

    OAIImmediateMdtConf immediate_mdt_conf;
    bool m_immediate_mdt_conf_isSet;
    bool m_immediate_mdt_conf_isValid;

    OAIEcRestrictionDataWb ec_restriction_data_wb;
    bool m_ec_restriction_data_wb_isSet;
    bool m_ec_restriction_data_wb_isValid;

    bool ec_restriction_data_nb;
    bool m_ec_restriction_data_nb_isSet;
    bool m_ec_restriction_data_nb_isValid;

    bool iab_operation_allowed;
    bool m_iab_operation_allowed_isSet;
    bool m_iab_operation_allowed_isValid;

    OAIServiceAreaRestriction used_service_area_restriction;
    bool m_used_service_area_restriction_isSet;
    bool m_used_service_area_restriction_isValid;

    QMap<QString, OAIPresenceInfo> pra_in_am_policy;
    bool m_pra_in_am_policy_isSet;
    bool m_pra_in_am_policy_isValid;

    OAIUpdpSubscriptionData updp_subscription_data;
    bool m_updp_subscription_data_isSet;
    bool m_updp_subscription_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUeContext)

#endif // OAIUeContext_H
