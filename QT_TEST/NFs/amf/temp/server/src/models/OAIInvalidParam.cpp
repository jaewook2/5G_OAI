/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvalidParam.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvalidParam::OAIInvalidParam(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvalidParam::OAIInvalidParam() {
    this->initializeModel();
}

OAIInvalidParam::~OAIInvalidParam() {}

void OAIInvalidParam::initializeModel() {

    m_param_isSet = false;
    m_param_isValid = false;

    m_reason_isSet = false;
    m_reason_isValid = false;
}

void OAIInvalidParam::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvalidParam::fromJsonObject(QJsonObject json) {

    m_param_isValid = ::OpenAPI::fromJsonValue(param, json[QString("param")]);
    m_param_isSet = !json[QString("param")].isNull() && m_param_isValid;

    m_reason_isValid = ::OpenAPI::fromJsonValue(reason, json[QString("reason")]);
    m_reason_isSet = !json[QString("reason")].isNull() && m_reason_isValid;
}

QString OAIInvalidParam::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvalidParam::asJsonObject() const {
    QJsonObject obj;
    if (m_param_isSet) {
        obj.insert(QString("param"), ::OpenAPI::toJsonValue(param));
    }
    if (m_reason_isSet) {
        obj.insert(QString("reason"), ::OpenAPI::toJsonValue(reason));
    }
    return obj;
}

QString OAIInvalidParam::getParam() const {
    return param;
}
void OAIInvalidParam::setParam(const QString &param) {
    this->param = param;
    this->m_param_isSet = true;
}

bool OAIInvalidParam::is_param_Set() const{
    return m_param_isSet;
}

bool OAIInvalidParam::is_param_Valid() const{
    return m_param_isValid;
}

QString OAIInvalidParam::getReason() const {
    return reason;
}
void OAIInvalidParam::setReason(const QString &reason) {
    this->reason = reason;
    this->m_reason_isSet = true;
}

bool OAIInvalidParam::is_reason_Set() const{
    return m_reason_isSet;
}

bool OAIInvalidParam::is_reason_Valid() const{
    return m_reason_isValid;
}

bool OAIInvalidParam::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_param_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reason_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvalidParam::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_param_isValid && true;
}

} // namespace OpenAPI
