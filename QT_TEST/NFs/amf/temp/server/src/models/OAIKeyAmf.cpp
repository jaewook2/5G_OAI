/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKeyAmf.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKeyAmf::OAIKeyAmf(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKeyAmf::OAIKeyAmf() {
    this->initializeModel();
}

OAIKeyAmf::~OAIKeyAmf() {}

void OAIKeyAmf::initializeModel() {

    m_key_type_isSet = false;
    m_key_type_isValid = false;

    m_key_val_isSet = false;
    m_key_val_isValid = false;
}

void OAIKeyAmf::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKeyAmf::fromJsonObject(QJsonObject json) {

    m_key_type_isValid = ::OpenAPI::fromJsonValue(key_type, json[QString("keyType")]);
    m_key_type_isSet = !json[QString("keyType")].isNull() && m_key_type_isValid;

    m_key_val_isValid = ::OpenAPI::fromJsonValue(key_val, json[QString("keyVal")]);
    m_key_val_isSet = !json[QString("keyVal")].isNull() && m_key_val_isValid;
}

QString OAIKeyAmf::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKeyAmf::asJsonObject() const {
    QJsonObject obj;
    if (key_type.isSet()) {
        obj.insert(QString("keyType"), ::OpenAPI::toJsonValue(key_type));
    }
    if (m_key_val_isSet) {
        obj.insert(QString("keyVal"), ::OpenAPI::toJsonValue(key_val));
    }
    return obj;
}

OAIKeyAmfType OAIKeyAmf::getKeyType() const {
    return key_type;
}
void OAIKeyAmf::setKeyType(const OAIKeyAmfType &key_type) {
    this->key_type = key_type;
    this->m_key_type_isSet = true;
}

bool OAIKeyAmf::is_key_type_Set() const{
    return m_key_type_isSet;
}

bool OAIKeyAmf::is_key_type_Valid() const{
    return m_key_type_isValid;
}

QString OAIKeyAmf::getKeyVal() const {
    return key_val;
}
void OAIKeyAmf::setKeyVal(const QString &key_val) {
    this->key_val = key_val;
    this->m_key_val_isSet = true;
}

bool OAIKeyAmf::is_key_val_Set() const{
    return m_key_val_isSet;
}

bool OAIKeyAmf::is_key_val_Valid() const{
    return m_key_val_isValid;
}

bool OAIKeyAmf::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (key_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_val_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKeyAmf::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_key_type_isValid && m_key_val_isValid && true;
}

} // namespace OpenAPI
