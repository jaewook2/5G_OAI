/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIN2InfoContainer.h
 *
 * 
 */

#ifndef OAIN2InfoContainer_H
#define OAIN2InfoContainer_H

#include <QJsonObject>

#include "OAIN2InformationClass.h"
#include "OAIN2RanInformation.h"
#include "OAIN2SmInformation.h"
#include "OAINrppaInformation.h"
#include "OAIPwsInformation.h"
#include "OAIV2xInformation.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIN2InfoContainer : public OAIObject {
public:
    OAIN2InfoContainer();
    OAIN2InfoContainer(QString json);
    ~OAIN2InfoContainer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIN2InformationClass getN2InformationClass() const;
    void setN2InformationClass(const OAIN2InformationClass &n2_information_class);
    bool is_n2_information_class_Set() const;
    bool is_n2_information_class_Valid() const;

    OAIN2SmInformation getSmInfo() const;
    void setSmInfo(const OAIN2SmInformation &sm_info);
    bool is_sm_info_Set() const;
    bool is_sm_info_Valid() const;

    OAIN2RanInformation getRanInfo() const;
    void setRanInfo(const OAIN2RanInformation &ran_info);
    bool is_ran_info_Set() const;
    bool is_ran_info_Valid() const;

    OAINrppaInformation getNrppaInfo() const;
    void setNrppaInfo(const OAINrppaInformation &nrppa_info);
    bool is_nrppa_info_Set() const;
    bool is_nrppa_info_Valid() const;

    OAIPwsInformation getPwsInfo() const;
    void setPwsInfo(const OAIPwsInformation &pws_info);
    bool is_pws_info_Set() const;
    bool is_pws_info_Valid() const;

    OAIV2xInformation getV2xInfo() const;
    void setV2xInfo(const OAIV2xInformation &v2x_info);
    bool is_v2x_info_Set() const;
    bool is_v2x_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIN2InformationClass n2_information_class;
    bool m_n2_information_class_isSet;
    bool m_n2_information_class_isValid;

    OAIN2SmInformation sm_info;
    bool m_sm_info_isSet;
    bool m_sm_info_isValid;

    OAIN2RanInformation ran_info;
    bool m_ran_info_isSet;
    bool m_ran_info_isValid;

    OAINrppaInformation nrppa_info;
    bool m_nrppa_info_isSet;
    bool m_nrppa_info_isValid;

    OAIPwsInformation pws_info;
    bool m_pws_info_isSet;
    bool m_pws_info_isValid;

    OAIV2xInformation v2x_info;
    bool m_v2x_info_isSet;
    bool m_v2x_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIN2InfoContainer)

#endif // OAIN2InfoContainer_H
