/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUeN1N2InfoSubscriptionCreatedData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUeN1N2InfoSubscriptionCreatedData::OAIUeN1N2InfoSubscriptionCreatedData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUeN1N2InfoSubscriptionCreatedData::OAIUeN1N2InfoSubscriptionCreatedData() {
    this->initializeModel();
}

OAIUeN1N2InfoSubscriptionCreatedData::~OAIUeN1N2InfoSubscriptionCreatedData() {}

void OAIUeN1N2InfoSubscriptionCreatedData::initializeModel() {

    m_n1n2_notify_subscription_id_isSet = false;
    m_n1n2_notify_subscription_id_isValid = false;

    m_supported_features_isSet = false;
    m_supported_features_isValid = false;
}

void OAIUeN1N2InfoSubscriptionCreatedData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUeN1N2InfoSubscriptionCreatedData::fromJsonObject(QJsonObject json) {

    m_n1n2_notify_subscription_id_isValid = ::OpenAPI::fromJsonValue(n1n2_notify_subscription_id, json[QString("n1n2NotifySubscriptionId")]);
    m_n1n2_notify_subscription_id_isSet = !json[QString("n1n2NotifySubscriptionId")].isNull() && m_n1n2_notify_subscription_id_isValid;

    m_supported_features_isValid = ::OpenAPI::fromJsonValue(supported_features, json[QString("supportedFeatures")]);
    m_supported_features_isSet = !json[QString("supportedFeatures")].isNull() && m_supported_features_isValid;
}

QString OAIUeN1N2InfoSubscriptionCreatedData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUeN1N2InfoSubscriptionCreatedData::asJsonObject() const {
    QJsonObject obj;
    if (m_n1n2_notify_subscription_id_isSet) {
        obj.insert(QString("n1n2NotifySubscriptionId"), ::OpenAPI::toJsonValue(n1n2_notify_subscription_id));
    }
    if (m_supported_features_isSet) {
        obj.insert(QString("supportedFeatures"), ::OpenAPI::toJsonValue(supported_features));
    }
    return obj;
}

QString OAIUeN1N2InfoSubscriptionCreatedData::getN1n2NotifySubscriptionId() const {
    return n1n2_notify_subscription_id;
}
void OAIUeN1N2InfoSubscriptionCreatedData::setN1n2NotifySubscriptionId(const QString &n1n2_notify_subscription_id) {
    this->n1n2_notify_subscription_id = n1n2_notify_subscription_id;
    this->m_n1n2_notify_subscription_id_isSet = true;
}

bool OAIUeN1N2InfoSubscriptionCreatedData::is_n1n2_notify_subscription_id_Set() const{
    return m_n1n2_notify_subscription_id_isSet;
}

bool OAIUeN1N2InfoSubscriptionCreatedData::is_n1n2_notify_subscription_id_Valid() const{
    return m_n1n2_notify_subscription_id_isValid;
}

QString OAIUeN1N2InfoSubscriptionCreatedData::getSupportedFeatures() const {
    return supported_features;
}
void OAIUeN1N2InfoSubscriptionCreatedData::setSupportedFeatures(const QString &supported_features) {
    this->supported_features = supported_features;
    this->m_supported_features_isSet = true;
}

bool OAIUeN1N2InfoSubscriptionCreatedData::is_supported_features_Set() const{
    return m_supported_features_isSet;
}

bool OAIUeN1N2InfoSubscriptionCreatedData::is_supported_features_Valid() const{
    return m_supported_features_isValid;
}

bool OAIUeN1N2InfoSubscriptionCreatedData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_n1n2_notify_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_features_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUeN1N2InfoSubscriptionCreatedData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_n1n2_notify_subscription_id_isValid && true;
}

} // namespace OpenAPI
