/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIN1MessageContainer.h
 *
 * 
 */

#ifndef OAIN1MessageContainer_H
#define OAIN1MessageContainer_H

#include <QJsonObject>

#include "OAIN1MessageClass.h"
#include "OAIRefToBinaryData.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIN1MessageContainer : public OAIObject {
public:
    OAIN1MessageContainer();
    OAIN1MessageContainer(QString json);
    ~OAIN1MessageContainer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIN1MessageClass getN1MessageClass() const;
    void setN1MessageClass(const OAIN1MessageClass &n1_message_class);
    bool is_n1_message_class_Set() const;
    bool is_n1_message_class_Valid() const;

    OAIRefToBinaryData getN1MessageContent() const;
    void setN1MessageContent(const OAIRefToBinaryData &n1_message_content);
    bool is_n1_message_content_Set() const;
    bool is_n1_message_content_Valid() const;

    QString getNfId() const;
    void setNfId(const QString &nf_id);
    bool is_nf_id_Set() const;
    bool is_nf_id_Valid() const;

    QString getServiceInstanceId() const;
    void setServiceInstanceId(const QString &service_instance_id);
    bool is_service_instance_id_Set() const;
    bool is_service_instance_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIN1MessageClass n1_message_class;
    bool m_n1_message_class_isSet;
    bool m_n1_message_class_isValid;

    OAIRefToBinaryData n1_message_content;
    bool m_n1_message_content_isSet;
    bool m_n1_message_content_isValid;

    QString nf_id;
    bool m_nf_id_isSet;
    bool m_nf_id_isValid;

    QString service_instance_id;
    bool m_service_instance_id_isSet;
    bool m_service_instance_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIN1MessageContainer)

#endif // OAIN1MessageContainer_H
