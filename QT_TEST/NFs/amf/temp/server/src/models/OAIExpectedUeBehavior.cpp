/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpectedUeBehavior.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpectedUeBehavior::OAIExpectedUeBehavior(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpectedUeBehavior::OAIExpectedUeBehavior() {
    this->initializeModel();
}

OAIExpectedUeBehavior::~OAIExpectedUeBehavior() {}

void OAIExpectedUeBehavior::initializeModel() {

    m_exp_move_trajectory_isSet = false;
    m_exp_move_trajectory_isValid = false;

    m_validity_time_isSet = false;
    m_validity_time_isValid = false;
}

void OAIExpectedUeBehavior::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExpectedUeBehavior::fromJsonObject(QJsonObject json) {

    m_exp_move_trajectory_isValid = ::OpenAPI::fromJsonValue(exp_move_trajectory, json[QString("expMoveTrajectory")]);
    m_exp_move_trajectory_isSet = !json[QString("expMoveTrajectory")].isNull() && m_exp_move_trajectory_isValid;

    m_validity_time_isValid = ::OpenAPI::fromJsonValue(validity_time, json[QString("validityTime")]);
    m_validity_time_isSet = !json[QString("validityTime")].isNull() && m_validity_time_isValid;
}

QString OAIExpectedUeBehavior::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExpectedUeBehavior::asJsonObject() const {
    QJsonObject obj;
    if (exp_move_trajectory.size() > 0) {
        obj.insert(QString("expMoveTrajectory"), ::OpenAPI::toJsonValue(exp_move_trajectory));
    }
    if (m_validity_time_isSet) {
        obj.insert(QString("validityTime"), ::OpenAPI::toJsonValue(validity_time));
    }
    return obj;
}

QList<OAIUserLocation> OAIExpectedUeBehavior::getExpMoveTrajectory() const {
    return exp_move_trajectory;
}
void OAIExpectedUeBehavior::setExpMoveTrajectory(const QList<OAIUserLocation> &exp_move_trajectory) {
    this->exp_move_trajectory = exp_move_trajectory;
    this->m_exp_move_trajectory_isSet = true;
}

bool OAIExpectedUeBehavior::is_exp_move_trajectory_Set() const{
    return m_exp_move_trajectory_isSet;
}

bool OAIExpectedUeBehavior::is_exp_move_trajectory_Valid() const{
    return m_exp_move_trajectory_isValid;
}

QDateTime OAIExpectedUeBehavior::getValidityTime() const {
    return validity_time;
}
void OAIExpectedUeBehavior::setValidityTime(const QDateTime &validity_time) {
    this->validity_time = validity_time;
    this->m_validity_time_isSet = true;
}

bool OAIExpectedUeBehavior::is_validity_time_Set() const{
    return m_validity_time_isSet;
}

bool OAIExpectedUeBehavior::is_validity_time_Valid() const{
    return m_validity_time_isValid;
}

bool OAIExpectedUeBehavior::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (exp_move_trajectory.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_validity_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExpectedUeBehavior::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_exp_move_trajectory_isValid && m_validity_time_isValid && true;
}

} // namespace OpenAPI
