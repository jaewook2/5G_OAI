/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDddTrafficDescriptor.h
 *
 * 
 */

#ifndef OAIDddTrafficDescriptor_H
#define OAIDddTrafficDescriptor_H

#include <QJsonObject>

#include "OAIIpv6Addr.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDddTrafficDescriptor : public OAIObject {
public:
    OAIDddTrafficDescriptor();
    OAIDddTrafficDescriptor(QString json);
    ~OAIDddTrafficDescriptor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIpv4Addr() const;
    void setIpv4Addr(const QString &ipv4_addr);
    bool is_ipv4_addr_Set() const;
    bool is_ipv4_addr_Valid() const;

    OAIIpv6Addr getIpv6Addr() const;
    void setIpv6Addr(const OAIIpv6Addr &ipv6_addr);
    bool is_ipv6_addr_Set() const;
    bool is_ipv6_addr_Valid() const;

    qint32 getPortNumber() const;
    void setPortNumber(const qint32 &port_number);
    bool is_port_number_Set() const;
    bool is_port_number_Valid() const;

    QString getMacAddr() const;
    void setMacAddr(const QString &mac_addr);
    bool is_mac_addr_Set() const;
    bool is_mac_addr_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString ipv4_addr;
    bool m_ipv4_addr_isSet;
    bool m_ipv4_addr_isValid;

    OAIIpv6Addr ipv6_addr;
    bool m_ipv6_addr_isSet;
    bool m_ipv6_addr_isValid;

    qint32 port_number;
    bool m_port_number_isSet;
    bool m_port_number_isValid;

    QString mac_addr;
    bool m_mac_addr_isSet;
    bool m_mac_addr_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDddTrafficDescriptor)

#endif // OAIDddTrafficDescriptor_H
