/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAmfEventMode.h
 *
 * 
 */

#ifndef OAIAmfEventMode_H
#define OAIAmfEventMode_H

#include <QJsonObject>

#include "OAIAmfEventTrigger.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAmfEventMode : public OAIObject {
public:
    OAIAmfEventMode();
    OAIAmfEventMode(QString json);
    ~OAIAmfEventMode() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAmfEventTrigger getTrigger() const;
    void setTrigger(const OAIAmfEventTrigger &trigger);
    bool is_trigger_Set() const;
    bool is_trigger_Valid() const;

    qint32 getMaxReports() const;
    void setMaxReports(const qint32 &max_reports);
    bool is_max_reports_Set() const;
    bool is_max_reports_Valid() const;

    QDateTime getExpiry() const;
    void setExpiry(const QDateTime &expiry);
    bool is_expiry_Set() const;
    bool is_expiry_Valid() const;

    qint32 getRepPeriod() const;
    void setRepPeriod(const qint32 &rep_period);
    bool is_rep_period_Set() const;
    bool is_rep_period_Valid() const;

    qint32 getSampRatio() const;
    void setSampRatio(const qint32 &samp_ratio);
    bool is_samp_ratio_Set() const;
    bool is_samp_ratio_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAmfEventTrigger trigger;
    bool m_trigger_isSet;
    bool m_trigger_isValid;

    qint32 max_reports;
    bool m_max_reports_isSet;
    bool m_max_reports_isValid;

    QDateTime expiry;
    bool m_expiry_isSet;
    bool m_expiry_isValid;

    qint32 rep_period;
    bool m_rep_period_isSet;
    bool m_rep_period_isValid;

    qint32 samp_ratio;
    bool m_samp_ratio_isSet;
    bool m_samp_ratio_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAmfEventMode)

#endif // OAIAmfEventMode_H
