/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPresenceState_anyOf.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPresenceState_anyOf::OAIPresenceState_anyOf(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPresenceState_anyOf::OAIPresenceState_anyOf() {
    this->initializeModel();
}

OAIPresenceState_anyOf::~OAIPresenceState_anyOf() {}

void OAIPresenceState_anyOf::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPresenceState_anyOf::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPresenceState_anyOf::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IN_AREA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresenceState_anyOf::IN_AREA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OUT_OF_AREA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresenceState_anyOf::OUT_OF_AREA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNKNOWN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresenceState_anyOf::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresenceState_anyOf::INACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPresenceState_anyOf::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPresenceState_anyOf::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPresenceState_anyOf::IN_AREA:
            val = "IN_AREA";
            break;
        case eOAIPresenceState_anyOf::OUT_OF_AREA:
            val = "OUT_OF_AREA";
            break;
        case eOAIPresenceState_anyOf::UNKNOWN:
            val = "UNKNOWN";
            break;
        case eOAIPresenceState_anyOf::INACTIVE:
            val = "INACTIVE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPresenceState_anyOf::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPresenceState_anyOf::eOAIPresenceState_anyOf OAIPresenceState_anyOf::getValue() const {
    return m_value;
}

void OAIPresenceState_anyOf::setValue(const OAIPresenceState_anyOf::eOAIPresenceState_anyOf& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPresenceState_anyOf::isSet() const {
    
    return m_value_isSet;
}

bool OAIPresenceState_anyOf::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
