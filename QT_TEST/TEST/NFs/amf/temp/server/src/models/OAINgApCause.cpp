/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINgApCause.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINgApCause::OAINgApCause(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINgApCause::OAINgApCause() {
    this->initializeModel();
}

OAINgApCause::~OAINgApCause() {}

void OAINgApCause::initializeModel() {

    m_group_isSet = false;
    m_group_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAINgApCause::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINgApCause::fromJsonObject(QJsonObject json) {

    m_group_isValid = ::OpenAPI::fromJsonValue(group, json[QString("group")]);
    m_group_isSet = !json[QString("group")].isNull() && m_group_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAINgApCause::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINgApCause::asJsonObject() const {
    QJsonObject obj;
    if (m_group_isSet) {
        obj.insert(QString("group"), ::OpenAPI::toJsonValue(group));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(value));
    }
    return obj;
}

qint32 OAINgApCause::getGroup() const {
    return group;
}
void OAINgApCause::setGroup(const qint32 &group) {
    this->group = group;
    this->m_group_isSet = true;
}

bool OAINgApCause::is_group_Set() const{
    return m_group_isSet;
}

bool OAINgApCause::is_group_Valid() const{
    return m_group_isValid;
}

qint32 OAINgApCause::getValue() const {
    return value;
}
void OAINgApCause::setValue(const qint32 &value) {
    this->value = value;
    this->m_value_isSet = true;
}

bool OAINgApCause::is_value_Set() const{
    return m_value_isSet;
}

bool OAINgApCause::is_value_Valid() const{
    return m_value_isValid;
}

bool OAINgApCause::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINgApCause::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_group_isValid && m_value_isValid && true;
}

} // namespace OpenAPI
