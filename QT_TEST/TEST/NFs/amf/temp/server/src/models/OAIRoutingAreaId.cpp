/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRoutingAreaId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRoutingAreaId::OAIRoutingAreaId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRoutingAreaId::OAIRoutingAreaId() {
    this->initializeModel();
}

OAIRoutingAreaId::~OAIRoutingAreaId() {}

void OAIRoutingAreaId::initializeModel() {

    m_plmn_id_isSet = false;
    m_plmn_id_isValid = false;

    m_lac_isSet = false;
    m_lac_isValid = false;

    m_rac_isSet = false;
    m_rac_isValid = false;
}

void OAIRoutingAreaId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRoutingAreaId::fromJsonObject(QJsonObject json) {

    m_plmn_id_isValid = ::OpenAPI::fromJsonValue(plmn_id, json[QString("plmnId")]);
    m_plmn_id_isSet = !json[QString("plmnId")].isNull() && m_plmn_id_isValid;

    m_lac_isValid = ::OpenAPI::fromJsonValue(lac, json[QString("lac")]);
    m_lac_isSet = !json[QString("lac")].isNull() && m_lac_isValid;

    m_rac_isValid = ::OpenAPI::fromJsonValue(rac, json[QString("rac")]);
    m_rac_isSet = !json[QString("rac")].isNull() && m_rac_isValid;
}

QString OAIRoutingAreaId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRoutingAreaId::asJsonObject() const {
    QJsonObject obj;
    if (plmn_id.isSet()) {
        obj.insert(QString("plmnId"), ::OpenAPI::toJsonValue(plmn_id));
    }
    if (m_lac_isSet) {
        obj.insert(QString("lac"), ::OpenAPI::toJsonValue(lac));
    }
    if (m_rac_isSet) {
        obj.insert(QString("rac"), ::OpenAPI::toJsonValue(rac));
    }
    return obj;
}

OAIPlmnId OAIRoutingAreaId::getPlmnId() const {
    return plmn_id;
}
void OAIRoutingAreaId::setPlmnId(const OAIPlmnId &plmn_id) {
    this->plmn_id = plmn_id;
    this->m_plmn_id_isSet = true;
}

bool OAIRoutingAreaId::is_plmn_id_Set() const{
    return m_plmn_id_isSet;
}

bool OAIRoutingAreaId::is_plmn_id_Valid() const{
    return m_plmn_id_isValid;
}

QString OAIRoutingAreaId::getLac() const {
    return lac;
}
void OAIRoutingAreaId::setLac(const QString &lac) {
    this->lac = lac;
    this->m_lac_isSet = true;
}

bool OAIRoutingAreaId::is_lac_Set() const{
    return m_lac_isSet;
}

bool OAIRoutingAreaId::is_lac_Valid() const{
    return m_lac_isValid;
}

QString OAIRoutingAreaId::getRac() const {
    return rac;
}
void OAIRoutingAreaId::setRac(const QString &rac) {
    this->rac = rac;
    this->m_rac_isSet = true;
}

bool OAIRoutingAreaId::is_rac_Set() const{
    return m_rac_isSet;
}

bool OAIRoutingAreaId::is_rac_Valid() const{
    return m_rac_isValid;
}

bool OAIRoutingAreaId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (plmn_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lac_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rac_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRoutingAreaId::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_plmn_id_isValid && m_lac_isValid && m_rac_isValid && true;
}

} // namespace OpenAPI
