/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReachabilityFilter_anyOf.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReachabilityFilter_anyOf::OAIReachabilityFilter_anyOf(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReachabilityFilter_anyOf::OAIReachabilityFilter_anyOf() {
    this->initializeModel();
}

OAIReachabilityFilter_anyOf::~OAIReachabilityFilter_anyOf() {}

void OAIReachabilityFilter_anyOf::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIReachabilityFilter_anyOf::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIReachabilityFilter_anyOf::fromJson(QString jsonString) {
    
    if ( jsonString.compare("UE_REACHABILITY_STATUS_CHANGE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReachabilityFilter_anyOf::REACHABILITY_STATUS_CHANGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UE_REACHABLE_DL_TRAFFIC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReachabilityFilter_anyOf::REACHABLE_DL_TRAFFIC;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIReachabilityFilter_anyOf::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIReachabilityFilter_anyOf::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIReachabilityFilter_anyOf::REACHABILITY_STATUS_CHANGE:
            val = "UE_REACHABILITY_STATUS_CHANGE";
            break;
        case eOAIReachabilityFilter_anyOf::REACHABLE_DL_TRAFFIC:
            val = "UE_REACHABLE_DL_TRAFFIC";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIReachabilityFilter_anyOf::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIReachabilityFilter_anyOf::eOAIReachabilityFilter_anyOf OAIReachabilityFilter_anyOf::getValue() const {
    return m_value;
}

void OAIReachabilityFilter_anyOf::setValue(const OAIReachabilityFilter_anyOf::eOAIReachabilityFilter_anyOf& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIReachabilityFilter_anyOf::isSet() const {
    
    return m_value_isSet;
}

bool OAIReachabilityFilter_anyOf::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
