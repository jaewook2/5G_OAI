/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessTokenReq.h
 *
 * Contains information related to the access token request
 */

#ifndef OAIAccessTokenReq_H
#define OAIAccessTokenReq_H

#include <QJsonObject>

#include "OAINFType.h"
#include "OAIPlmnId.h"
#include "OAIPlmnIdNid.h"
#include "OAISnssai.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccessTokenReq : public OAIObject {
public:
    OAIAccessTokenReq();
    OAIAccessTokenReq(QString json);
    ~OAIAccessTokenReq() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGrantType() const;
    void setGrantType(const QString &grant_type);
    bool is_grant_type_Set() const;
    bool is_grant_type_Valid() const;

    QString getNfInstanceId() const;
    void setNfInstanceId(const QString &nf_instance_id);
    bool is_nf_instance_id_Set() const;
    bool is_nf_instance_id_Valid() const;

    OAINFType getNfType() const;
    void setNfType(const OAINFType &nf_type);
    bool is_nf_type_Set() const;
    bool is_nf_type_Valid() const;

    OAINFType getTargetNfType() const;
    void setTargetNfType(const OAINFType &target_nf_type);
    bool is_target_nf_type_Set() const;
    bool is_target_nf_type_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QString getTargetNfInstanceId() const;
    void setTargetNfInstanceId(const QString &target_nf_instance_id);
    bool is_target_nf_instance_id_Set() const;
    bool is_target_nf_instance_id_Valid() const;

    OAIPlmnId getRequesterPlmn() const;
    void setRequesterPlmn(const OAIPlmnId &requester_plmn);
    bool is_requester_plmn_Set() const;
    bool is_requester_plmn_Valid() const;

    QList<OAIPlmnId> getRequesterPlmnList() const;
    void setRequesterPlmnList(const QList<OAIPlmnId> &requester_plmn_list);
    bool is_requester_plmn_list_Set() const;
    bool is_requester_plmn_list_Valid() const;

    QList<OAISnssai> getRequesterSnssaiList() const;
    void setRequesterSnssaiList(const QList<OAISnssai> &requester_snssai_list);
    bool is_requester_snssai_list_Set() const;
    bool is_requester_snssai_list_Valid() const;

    QString getRequesterFqdn() const;
    void setRequesterFqdn(const QString &requester_fqdn);
    bool is_requester_fqdn_Set() const;
    bool is_requester_fqdn_Valid() const;

    QList<OAIPlmnIdNid> getRequesterSnpnList() const;
    void setRequesterSnpnList(const QList<OAIPlmnIdNid> &requester_snpn_list);
    bool is_requester_snpn_list_Set() const;
    bool is_requester_snpn_list_Valid() const;

    OAIPlmnId getTargetPlmn() const;
    void setTargetPlmn(const OAIPlmnId &target_plmn);
    bool is_target_plmn_Set() const;
    bool is_target_plmn_Valid() const;

    QList<OAISnssai> getTargetSnssaiList() const;
    void setTargetSnssaiList(const QList<OAISnssai> &target_snssai_list);
    bool is_target_snssai_list_Set() const;
    bool is_target_snssai_list_Valid() const;

    QList<QString> getTargetNsiList() const;
    void setTargetNsiList(const QList<QString> &target_nsi_list);
    bool is_target_nsi_list_Set() const;
    bool is_target_nsi_list_Valid() const;

    QString getTargetNfSetId() const;
    void setTargetNfSetId(const QString &target_nf_set_id);
    bool is_target_nf_set_id_Set() const;
    bool is_target_nf_set_id_Valid() const;

    QString getTargetNfServiceSetId() const;
    void setTargetNfServiceSetId(const QString &target_nf_service_set_id);
    bool is_target_nf_service_set_id_Set() const;
    bool is_target_nf_service_set_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString grant_type;
    bool m_grant_type_isSet;
    bool m_grant_type_isValid;

    QString nf_instance_id;
    bool m_nf_instance_id_isSet;
    bool m_nf_instance_id_isValid;

    OAINFType nf_type;
    bool m_nf_type_isSet;
    bool m_nf_type_isValid;

    OAINFType target_nf_type;
    bool m_target_nf_type_isSet;
    bool m_target_nf_type_isValid;

    QString scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QString target_nf_instance_id;
    bool m_target_nf_instance_id_isSet;
    bool m_target_nf_instance_id_isValid;

    OAIPlmnId requester_plmn;
    bool m_requester_plmn_isSet;
    bool m_requester_plmn_isValid;

    QList<OAIPlmnId> requester_plmn_list;
    bool m_requester_plmn_list_isSet;
    bool m_requester_plmn_list_isValid;

    QList<OAISnssai> requester_snssai_list;
    bool m_requester_snssai_list_isSet;
    bool m_requester_snssai_list_isValid;

    QString requester_fqdn;
    bool m_requester_fqdn_isSet;
    bool m_requester_fqdn_isValid;

    QList<OAIPlmnIdNid> requester_snpn_list;
    bool m_requester_snpn_list_isSet;
    bool m_requester_snpn_list_isValid;

    OAIPlmnId target_plmn;
    bool m_target_plmn_isSet;
    bool m_target_plmn_isValid;

    QList<OAISnssai> target_snssai_list;
    bool m_target_snssai_list_isSet;
    bool m_target_snssai_list_isValid;

    QList<QString> target_nsi_list;
    bool m_target_nsi_list_isSet;
    bool m_target_nsi_list_isValid;

    QString target_nf_set_id;
    bool m_target_nf_set_id_isSet;
    bool m_target_nf_set_id_isValid;

    QString target_nf_service_set_id;
    bool m_target_nf_service_set_id_isSet;
    bool m_target_nf_service_set_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessTokenReq)

#endif // OAIAccessTokenReq_H
