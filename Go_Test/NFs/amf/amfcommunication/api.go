/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfcommunication

import (
"amf.com/amfcommon"
"amf.com/amfmodel"
	"context"
	"net/http"
	"os"
)



// IndividualSubscriptionDocumentApiRouter defines the required methods for binding the api requests to a responses for the IndividualSubscriptionDocumentApi
// The IndividualSubscriptionDocumentApiRouter implementation should parse necessary information from the http request,
// pass the data to a IndividualSubscriptionDocumentApiServicer to perform the required actions, then write the service results to the http response.
type IndividualSubscriptionDocumentApiRouter interface { 
	AMFStatusChangeSubscribeModfy(http.ResponseWriter, *http.Request)
	AMFStatusChangeUnSubscribe(http.ResponseWriter, *http.Request)
}
// IndividualUeContextDocumentApiRouter defines the required methods for binding the api requests to a responses for the IndividualUeContextDocumentApi
// The IndividualUeContextDocumentApiRouter implementation should parse necessary information from the http request,
// pass the data to a IndividualUeContextDocumentApiServicer to perform the required actions, then write the service results to the http response.
type IndividualUeContextDocumentApiRouter interface { 
	CancelRelocateUEContext(http.ResponseWriter, *http.Request)
	CreateUEContext(http.ResponseWriter, *http.Request)
	EBIAssignment(http.ResponseWriter, *http.Request)
	RegistrationStatusUpdate(http.ResponseWriter, *http.Request)
	ReleaseUEContext(http.ResponseWriter, *http.Request)
	RelocateUEContext(http.ResponseWriter, *http.Request)
	UEContextTransfer(http.ResponseWriter, *http.Request)
}
// N1N2IndividualSubscriptionDocumentApiRouter defines the required methods for binding the api requests to a responses for the N1N2IndividualSubscriptionDocumentApi
// The N1N2IndividualSubscriptionDocumentApiRouter implementation should parse necessary information from the http request,
// pass the data to a N1N2IndividualSubscriptionDocumentApiServicer to perform the required actions, then write the service results to the http response.
type N1N2IndividualSubscriptionDocumentApiRouter interface { 
	N1N2MessageUnSubscribe(http.ResponseWriter, *http.Request)
}
// N1N2MessageCollectionDocumentApiRouter defines the required methods for binding the api requests to a responses for the N1N2MessageCollectionDocumentApi
// The N1N2MessageCollectionDocumentApiRouter implementation should parse necessary information from the http request,
// pass the data to a N1N2MessageCollectionDocumentApiServicer to perform the required actions, then write the service results to the http response.
type N1N2MessageCollectionDocumentApiRouter interface { 
	N1N2MessageTransfer(http.ResponseWriter, *http.Request)
}
// N1N2SubscriptionsCollectionForIndividualUEContextsDocumentApiRouter defines the required methods for binding the api requests to a responses for the N1N2SubscriptionsCollectionForIndividualUEContextsDocumentApi
// The N1N2SubscriptionsCollectionForIndividualUEContextsDocumentApiRouter implementation should parse necessary information from the http request,
// pass the data to a N1N2SubscriptionsCollectionForIndividualUEContextsDocumentApiServicer to perform the required actions, then write the service results to the http response.
type N1N2SubscriptionsCollectionForIndividualUEContextsDocumentApiRouter interface { 
	N1N2MessageSubscribe(http.ResponseWriter, *http.Request)
}
// NonUEN2MessageNotificationIndividualSubscriptionDocumentApiRouter defines the required methods for binding the api requests to a responses for the NonUEN2MessageNotificationIndividualSubscriptionDocumentApi
// The NonUEN2MessageNotificationIndividualSubscriptionDocumentApiRouter implementation should parse necessary information from the http request,
// pass the data to a NonUEN2MessageNotificationIndividualSubscriptionDocumentApiServicer to perform the required actions, then write the service results to the http response.
type NonUEN2MessageNotificationIndividualSubscriptionDocumentApiRouter interface { 
	NonUeN2InfoUnSubscribe(http.ResponseWriter, *http.Request)
}
// NonUEN2MessagesCollectionDocumentApiRouter defines the required methods for binding the api requests to a responses for the NonUEN2MessagesCollectionDocumentApi
// The NonUEN2MessagesCollectionDocumentApiRouter implementation should parse necessary information from the http request,
// pass the data to a NonUEN2MessagesCollectionDocumentApiServicer to perform the required actions, then write the service results to the http response.
type NonUEN2MessagesCollectionDocumentApiRouter interface { 
	NonUeN2MessageTransfer(http.ResponseWriter, *http.Request)
}
// NonUEN2MessagesSubscriptionsCollectionDocumentApiRouter defines the required methods for binding the api requests to a responses for the NonUEN2MessagesSubscriptionsCollectionDocumentApi
// The NonUEN2MessagesSubscriptionsCollectionDocumentApiRouter implementation should parse necessary information from the http request,
// pass the data to a NonUEN2MessagesSubscriptionsCollectionDocumentApiServicer to perform the required actions, then write the service results to the http response.
type NonUEN2MessagesSubscriptionsCollectionDocumentApiRouter interface { 
	NonUeN2InfoSubscribe(http.ResponseWriter, *http.Request)
}
// SubscriptionsCollectionDocumentApiRouter defines the required methods for binding the api requests to a responses for the SubscriptionsCollectionDocumentApi
// The SubscriptionsCollectionDocumentApiRouter implementation should parse necessary information from the http request,
// pass the data to a SubscriptionsCollectionDocumentApiServicer to perform the required actions, then write the service results to the http response.
type SubscriptionsCollectionDocumentApiRouter interface { 
	AMFStatusChangeSubscribe(http.ResponseWriter, *http.Request)
}


// IndividualSubscriptionDocumentApiServicer defines the api actions for the IndividualSubscriptionDocumentApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type IndividualSubscriptionDocumentApiServicer interface { 
	AMFStatusChangeSubscribeModfy(context.Context, string, amfmodel.SubscriptionData) (amfcommon.ImplResponse, error)
	AMFStatusChangeUnSubscribe(context.Context, string) (amfcommon.ImplResponse, error)
}


// IndividualUeContextDocumentApiServicer defines the api actions for the IndividualUeContextDocumentApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type IndividualUeContextDocumentApiServicer interface { 
	CancelRelocateUEContext(context.Context, string, amfmodel.UeContextCancelRelocateData, *os.File) (amfcommon.ImplResponse, error)
	CreateUEContext(context.Context, string, amfmodel.UeContextCreateData, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File) (amfcommon.ImplResponse, error)
	EBIAssignment(context.Context, string, amfmodel.AssignEbiData) (amfcommon.ImplResponse, error)
	RegistrationStatusUpdate(context.Context, string, amfmodel.UeRegStatusUpdateReqData) (amfcommon.ImplResponse, error)
	ReleaseUEContext(context.Context, string, amfmodel.UeContextRelease) (amfcommon.ImplResponse, error)
	RelocateUEContext(context.Context, string, amfmodel.UeContextRelocateData, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File, *os.File) (amfcommon.ImplResponse, error)
	UEContextTransfer(context.Context, string, amfmodel.UeContextTransferReqData) (amfcommon.ImplResponse, error)
}


// N1N2IndividualSubscriptionDocumentApiServicer defines the api actions for the N1N2IndividualSubscriptionDocumentApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type N1N2IndividualSubscriptionDocumentApiServicer interface { 
	N1N2MessageUnSubscribe(context.Context, string, string) (amfcommon.ImplResponse, error)
}


// N1N2MessageCollectionDocumentApiServicer defines the api actions for the N1N2MessageCollectionDocumentApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type N1N2MessageCollectionDocumentApiServicer interface { 
	N1N2MessageTransfer(context.Context, string, amfmodel.N1N2MessageTransferReqData) (amfcommon.ImplResponse, error)
}


// N1N2SubscriptionsCollectionForIndividualUEContextsDocumentApiServicer defines the api actions for the N1N2SubscriptionsCollectionForIndividualUEContextsDocumentApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type N1N2SubscriptionsCollectionForIndividualUEContextsDocumentApiServicer interface { 
	N1N2MessageSubscribe(context.Context, string, amfmodel.UeN1N2InfoSubscriptionCreateData) (amfcommon.ImplResponse, error)
}


// NonUEN2MessageNotificationIndividualSubscriptionDocumentApiServicer defines the api actions for the NonUEN2MessageNotificationIndividualSubscriptionDocumentApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type NonUEN2MessageNotificationIndividualSubscriptionDocumentApiServicer interface { 
	NonUeN2InfoUnSubscribe(context.Context, string) (amfcommon.ImplResponse, error)
}


// NonUEN2MessagesCollectionDocumentApiServicer defines the api actions for the NonUEN2MessagesCollectionDocumentApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type NonUEN2MessagesCollectionDocumentApiServicer interface { 
	NonUeN2MessageTransfer(context.Context, amfmodel.N2InformationTransferReqData) (amfcommon.ImplResponse, error)
}


// NonUEN2MessagesSubscriptionsCollectionDocumentApiServicer defines the api actions for the NonUEN2MessagesSubscriptionsCollectionDocumentApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type NonUEN2MessagesSubscriptionsCollectionDocumentApiServicer interface { 
	NonUeN2InfoSubscribe(context.Context, amfmodel.NonUeN2InfoSubscriptionCreateData) (amfcommon.ImplResponse, error)
}


// SubscriptionsCollectionDocumentApiServicer defines the api actions for the SubscriptionsCollectionDocumentApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SubscriptionsCollectionDocumentApiServicer interface { 
	AMFStatusChangeSubscribe(context.Context, amfmodel.SubscriptionData) (amfcommon.ImplResponse, error)
}
