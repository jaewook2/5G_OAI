/*
 * Namf_EventExposure
 *
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfeventexposure

import (
	"context"
	"errors"
	"net/http"

	"amf.com/amfcommon"
	"amf.com/amfmodel"
)

// SubscriptionsCollectionDocumentApiService is a service that implements the logic for the SubscriptionsCollectionDocumentApiServicer
// This service should implement the business logic for every endpoint for the SubscriptionsCollectionDocumentApi API.
// Include any external packages or services that will be required by this service.
type SubscriptionsCollectionDocumentApiService struct {
}

// NewSubscriptionsCollectionDocumentApiService creates a default api service
func NewSubscriptionsCollectionDocumentApiService() SubscriptionsCollectionDocumentApiServicer {
	return &SubscriptionsCollectionDocumentApiService{}
}

// CreateSubscription - Namf_EventExposure Subscribe service Operation
func (s *SubscriptionsCollectionDocumentApiService) CreateSubscription(ctx context.Context, amfCreateEventSubscription amfmodel.AmfCreateEventSubscription) (amfcommon.ImplResponse, error) {
	// TODO - update CreateSubscription with the required logic for this service method.
	// Add api_subscriptions_collection_document_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response amfcommon.Response(201, amfmodel.AmfCreatedEventSubscription{}) or use other options such as http.Ok ...
	//return amfcommon.Response(201, amfmodel.AmfCreatedEventSubscription{}), nil

	//TODO: Uncomment the next line to return response amfcommon.Response(307, amfmodel.RedirectResponse{}) or use other options such as http.Ok ...
	//return amfcommon.Response(307, amfmodel.RedirectResponse{}), nil

	//TODO: Uncomment the next line to return response amfcommon.Response(308, amfmodel.RedirectResponse{}) or use other options such as http.Ok ...
	//return amfcommon.Response(308, amfmodel.RedirectResponse{}), nil

	//TODO: Uncomment the next line to return response amfcommon.Response(400, amfmodel.ProblemDetails{}) or use other options such as http.Ok ...
	//return amfcommon.Response(400, amfmodel.ProblemDetails{}), nil

	//TODO: Uncomment the next line to return response amfcommon.Response(403, amfmodel.ProblemDetails{}) or use other options such as http.Ok ...
	//return amfcommon.Response(403, amfmodel.ProblemDetails{}), nil

	//TODO: Uncomment the next line to return response amfcommon.Response(411, amfmodel.ProblemDetails{}) or use other options such as http.Ok ...
	//return amfcommon.Response(411, amfmodel.ProblemDetails{}), nil

	//TODO: Uncomment the next line to return response amfcommon.Response(413, amfmodel.ProblemDetails{}) or use other options such as http.Ok ...
	//return amfcommon.Response(413, amfmodel.ProblemDetails{}), nil

	//TODO: Uncomment the next line to return response amfcommon.Response(415, amfmodel.ProblemDetails{}) or use other options such as http.Ok ...
	//return amfcommon.Response(415, amfmodel.ProblemDetails{}), nil

	//TODO: Uncomment the next line to return response amfcommon.Response(429, amfmodel.ProblemDetails{}) or use other options such as http.Ok ...
	//return amfcommon.Response(429, amfmodel.ProblemDetails{}), nil

	//TODO: Uncomment the next line to return response amfcommon.Response(500, amfmodel.ProblemDetails{}) or use other options such as http.Ok ...
	//return amfcommon.Response(500, amfmodel.ProblemDetails{}), nil

	//TODO: Uncomment the next line to return response amfcommon.Response(503, amfmodel.ProblemDetails{}) or use other options such as http.Ok ...
	//return amfcommon.Response(503, amfmodel.ProblemDetails{}), nil

	//TODO: Uncomment the next line to return response amfcommon.Response(0, amfmodel.{}) or use other options such as http.Ok ...
	//return amfcommon.Response(0, nil),nil

	return amfcommon.Response(http.StatusNotImplemented, nil), errors.New("CreateSubscription method not implemented")
}
