/*
 * Namf_MT
 *
 * AMF Mobile Terminated Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmt

import (
"amf.com/amfcommon"
"amf.com/amfmodel"
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// UeContextDocumentApiController binds http requests to an api service and writes the service results to the http response
type UeContextDocumentApiController struct {
	service UeContextDocumentApiServicer
	errorHandler amfcommon.ErrorHandler
}

// UeContextDocumentApiOption for how the controller is set up.
type UeContextDocumentApiOption func(*UeContextDocumentApiController)

// WithUeContextDocumentApiErrorHandler inject amfcommon.ErrorHandler into controller
func WithUeContextDocumentApiErrorHandler(h amfcommon.ErrorHandler) UeContextDocumentApiOption {
	return func(c *UeContextDocumentApiController) {
		c.errorHandler = h
	}
}

// NewUeContextDocumentApiController creates a default api controller
func NewUeContextDocumentApiController(s UeContextDocumentApiServicer, opts ...UeContextDocumentApiOption) amfcommon.Router {
	controller := &UeContextDocumentApiController{
		service:      s,
		errorHandler: amfcommon.DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all of the api route for the UeContextDocumentApiController
func (c *UeContextDocumentApiController) Routes() amfcommon.Routes {
	return amfcommon.Routes { 
		{
			"ProvideDomainSelectionInfo",
			strings.ToUpper("Get"),
			"/namf-mt/v1/ue-contexts/{ueContextId}",
			c.ProvideDomainSelectionInfo,
		},
	}
}

// ProvideDomainSelectionInfo - Namf_MT Provide Domain Selection Info service Operation
func (c *UeContextDocumentApiController) ProvideDomainSelectionInfo(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	query := r.URL.Query()
	ueContextIdParam := params["ueContextId"]
	
	infoClassParam := query.Get("info-class")
	supportedFeaturesParam := query.Get("supported-features")
	oldGuamiParam := query.Get("old-guami")
	result, err := c.service.ProvideDomainSelectionInfo(r.Context(), ueContextIdParam, infoClassParam, supportedFeaturesParam, oldGuamiParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	amfcommon.EncodeJSONResponse(result.Body, &result.Code, w)

}
