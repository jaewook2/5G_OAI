/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type V2xInformation struct {

	N2Pc5Pol N2InfoContent `json:"n2Pc5Pol,omitempty"`
}

// AssertV2xInformationRequired checks if the required fields are not zero-ed
func AssertV2xInformationRequired(obj V2xInformation) error {
	if err := AssertN2InfoContentRequired(obj.N2Pc5Pol); err != nil {
		return err
	}
	return nil
}

// AssertRecurseV2xInformationRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of V2xInformation (e.g. [][]V2xInformation), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseV2xInformationRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aV2xInformation, ok := obj.(V2xInformation)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertV2xInformationRequired(aV2xInformation)
	})
}
