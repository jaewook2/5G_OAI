/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type TacInfo struct {

	TacList []string `json:"tacList"`
}

// AssertTacInfoRequired checks if the required fields are not zero-ed
func AssertTacInfoRequired(obj TacInfo) error {
	elements := map[string]interface{}{
		"tacList": obj.TacList,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseTacInfoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TacInfo (e.g. [][]TacInfo), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseTacInfoRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTacInfo, ok := obj.(TacInfo)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertTacInfoRequired(aTacInfo)
	})
}
