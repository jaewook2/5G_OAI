/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type N2InformationClassAnyOf string

// List of N2InformationClassAnyOf
const (
	N2INFORMATIONCLASSANYOF_SM N2InformationClassAnyOf = "SM"
	N2INFORMATIONCLASSANYOF_NRPPA N2InformationClassAnyOf = "NRPPa"
	N2INFORMATIONCLASSANYOF_PWS N2InformationClassAnyOf = "PWS"
	N2INFORMATIONCLASSANYOF_PWS_BCAL N2InformationClassAnyOf = "PWS-BCAL"
	N2INFORMATIONCLASSANYOF_PWS_RF N2InformationClassAnyOf = "PWS-RF"
	N2INFORMATIONCLASSANYOF_RAN N2InformationClassAnyOf = "RAN"
	N2INFORMATIONCLASSANYOF_V2_X N2InformationClassAnyOf = "V2X"
)

// AssertN2InformationClassAnyOfRequired checks if the required fields are not zero-ed
func AssertN2InformationClassAnyOfRequired(obj N2InformationClassAnyOf) error {
	return nil
}

// AssertRecurseN2InformationClassAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of N2InformationClassAnyOf (e.g. [][]N2InformationClassAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseN2InformationClassAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aN2InformationClassAnyOf, ok := obj.(N2InformationClassAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertN2InformationClassAnyOfRequired(aN2InformationClassAnyOf)
	})
}
