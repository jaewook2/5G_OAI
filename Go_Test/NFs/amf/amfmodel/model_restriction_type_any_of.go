/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type RestrictionTypeAnyOf string

// List of RestrictionTypeAnyOf
const (
	RESTRICTIONTYPEANYOF_ALLOWED_AREAS RestrictionTypeAnyOf = "ALLOWED_AREAS"
	RESTRICTIONTYPEANYOF_NOT_ALLOWED_AREAS RestrictionTypeAnyOf = "NOT_ALLOWED_AREAS"
)

// AssertRestrictionTypeAnyOfRequired checks if the required fields are not zero-ed
func AssertRestrictionTypeAnyOfRequired(obj RestrictionTypeAnyOf) error {
	return nil
}

// AssertRecurseRestrictionTypeAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RestrictionTypeAnyOf (e.g. [][]RestrictionTypeAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseRestrictionTypeAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRestrictionTypeAnyOf, ok := obj.(RestrictionTypeAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertRestrictionTypeAnyOfRequired(aRestrictionTypeAnyOf)
	})
}
