/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type SmsSupportAnyOf string

// List of SmsSupportAnyOf
const (
	SMSSUPPORTANYOF__3_GPP SmsSupportAnyOf = "3GPP"
	SMSSUPPORTANYOF_NON_3_GPP SmsSupportAnyOf = "NON_3GPP"
	SMSSUPPORTANYOF_BOTH SmsSupportAnyOf = "BOTH"
	SMSSUPPORTANYOF_NONE SmsSupportAnyOf = "NONE"
)

// AssertSmsSupportAnyOfRequired checks if the required fields are not zero-ed
func AssertSmsSupportAnyOfRequired(obj SmsSupportAnyOf) error {
	return nil
}

// AssertRecurseSmsSupportAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SmsSupportAnyOf (e.g. [][]SmsSupportAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseSmsSupportAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSmsSupportAnyOf, ok := obj.(SmsSupportAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertSmsSupportAnyOfRequired(aSmsSupportAnyOf)
	})
}
