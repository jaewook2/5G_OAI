/*
 * Namf_EventExposure
 *
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type RmStateAnyOf string

// List of RmStateAnyOf
const (
	RMSTATEANYOF_REGISTERED RmStateAnyOf = "REGISTERED"
	RMSTATEANYOF_DEREGISTERED RmStateAnyOf = "DEREGISTERED"
)

// AssertRmStateAnyOfRequired checks if the required fields are not zero-ed
func AssertRmStateAnyOfRequired(obj RmStateAnyOf) error {
	return nil
}

// AssertRecurseRmStateAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RmStateAnyOf (e.g. [][]RmStateAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseRmStateAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRmStateAnyOf, ok := obj.(RmStateAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertRmStateAnyOfRequired(aRmStateAnyOf)
	})
}
