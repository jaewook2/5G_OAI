/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type PreemptionCapabilityAnyOf string

// List of PreemptionCapabilityAnyOf
const (
	PREEMPTIONCAPABILITYANYOF_NOT_PREEMPT PreemptionCapabilityAnyOf = "NOT_PREEMPT"
	PREEMPTIONCAPABILITYANYOF_MAY_PREEMPT PreemptionCapabilityAnyOf = "MAY_PREEMPT"
)

// AssertPreemptionCapabilityAnyOfRequired checks if the required fields are not zero-ed
func AssertPreemptionCapabilityAnyOfRequired(obj PreemptionCapabilityAnyOf) error {
	return nil
}

// AssertRecursePreemptionCapabilityAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PreemptionCapabilityAnyOf (e.g. [][]PreemptionCapabilityAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecursePreemptionCapabilityAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPreemptionCapabilityAnyOf, ok := obj.(PreemptionCapabilityAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertPreemptionCapabilityAnyOfRequired(aPreemptionCapabilityAnyOf)
	})
}
