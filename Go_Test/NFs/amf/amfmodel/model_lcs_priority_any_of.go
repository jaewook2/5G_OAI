/*
 * Namf_Location
 *
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type LcsPriorityAnyOf string

// List of LcsPriorityAnyOf
const (
	LCSPRIORITYANYOF_HIGHEST_PRIORITY LcsPriorityAnyOf = "HIGHEST_PRIORITY"
	LCSPRIORITYANYOF_NORMAL_PRIORITY LcsPriorityAnyOf = "NORMAL_PRIORITY"
)

// AssertLcsPriorityAnyOfRequired checks if the required fields are not zero-ed
func AssertLcsPriorityAnyOfRequired(obj LcsPriorityAnyOf) error {
	return nil
}

// AssertRecurseLcsPriorityAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of LcsPriorityAnyOf (e.g. [][]LcsPriorityAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseLcsPriorityAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aLcsPriorityAnyOf, ok := obj.(LcsPriorityAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertLcsPriorityAnyOfRequired(aLcsPriorityAnyOf)
	})
}
