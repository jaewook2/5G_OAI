/*
 * Namf_Location
 *
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type VelocityRequestedAnyOf string

// List of VelocityRequestedAnyOf
const (
	VELOCITYREQUESTEDANYOF_NOT_REQUESTED VelocityRequestedAnyOf = "VELOCITY_IS_NOT_REQUESTED"
	VELOCITYREQUESTEDANYOF_REQUESTED VelocityRequestedAnyOf = "VELOCITY_IS_REQUESTED"
)

// AssertVelocityRequestedAnyOfRequired checks if the required fields are not zero-ed
func AssertVelocityRequestedAnyOfRequired(obj VelocityRequestedAnyOf) error {
	return nil
}

// AssertRecurseVelocityRequestedAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of VelocityRequestedAnyOf (e.g. [][]VelocityRequestedAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseVelocityRequestedAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aVelocityRequestedAnyOf, ok := obj.(VelocityRequestedAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertVelocityRequestedAnyOfRequired(aVelocityRequestedAnyOf)
	})
}
