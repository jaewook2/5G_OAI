/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type PositioningMethodMdtAnyOf string

// List of PositioningMethodMdtAnyOf
const (
	POSITIONINGMETHODMDTANYOF_GNSS PositioningMethodMdtAnyOf = "GNSS"
	POSITIONINGMETHODMDTANYOF_E_CELL_ID PositioningMethodMdtAnyOf = "E_CELL_ID"
)

// AssertPositioningMethodMdtAnyOfRequired checks if the required fields are not zero-ed
func AssertPositioningMethodMdtAnyOfRequired(obj PositioningMethodMdtAnyOf) error {
	return nil
}

// AssertRecursePositioningMethodMdtAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PositioningMethodMdtAnyOf (e.g. [][]PositioningMethodMdtAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecursePositioningMethodMdtAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPositioningMethodMdtAnyOf, ok := obj.(PositioningMethodMdtAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertPositioningMethodMdtAnyOfRequired(aPositioningMethodMdtAnyOf)
	})
}
