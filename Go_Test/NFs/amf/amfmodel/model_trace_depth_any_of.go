/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type TraceDepthAnyOf string

// List of TraceDepthAnyOf
const (
	TRACEDEPTHANYOF_MINIMUM TraceDepthAnyOf = "MINIMUM"
	TRACEDEPTHANYOF_MEDIUM TraceDepthAnyOf = "MEDIUM"
	TRACEDEPTHANYOF_MAXIMUM TraceDepthAnyOf = "MAXIMUM"
	TRACEDEPTHANYOF_MINIMUM_WO_VENDOR_EXTENSION TraceDepthAnyOf = "MINIMUM_WO_VENDOR_EXTENSION"
	TRACEDEPTHANYOF_MEDIUM_WO_VENDOR_EXTENSION TraceDepthAnyOf = "MEDIUM_WO_VENDOR_EXTENSION"
	TRACEDEPTHANYOF_MAXIMUM_WO_VENDOR_EXTENSION TraceDepthAnyOf = "MAXIMUM_WO_VENDOR_EXTENSION"
)

// AssertTraceDepthAnyOfRequired checks if the required fields are not zero-ed
func AssertTraceDepthAnyOfRequired(obj TraceDepthAnyOf) error {
	return nil
}

// AssertRecurseTraceDepthAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TraceDepthAnyOf (e.g. [][]TraceDepthAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseTraceDepthAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTraceDepthAnyOf, ok := obj.(TraceDepthAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertTraceDepthAnyOfRequired(aTraceDepthAnyOf)
	})
}
