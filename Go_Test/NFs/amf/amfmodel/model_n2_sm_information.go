/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type N2SmInformation struct {

	PduSessionId int32 `json:"pduSessionId"`

	N2InfoContent N2InfoContent `json:"n2InfoContent,omitempty"`

	SNssai Snssai `json:"sNssai,omitempty"`

	HomePlmnSnssai Snssai `json:"homePlmnSnssai,omitempty"`

	IwkSnssai Snssai `json:"iwkSnssai,omitempty"`

	SubjectToHo bool `json:"subjectToHo,omitempty"`
}

// AssertN2SmInformationRequired checks if the required fields are not zero-ed
func AssertN2SmInformationRequired(obj N2SmInformation) error {
	elements := map[string]interface{}{
		"pduSessionId": obj.PduSessionId,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	if err := AssertN2InfoContentRequired(obj.N2InfoContent); err != nil {
		return err
	}
	if err := AssertSnssaiRequired(obj.SNssai); err != nil {
		return err
	}
	if err := AssertSnssaiRequired(obj.HomePlmnSnssai); err != nil {
		return err
	}
	if err := AssertSnssaiRequired(obj.IwkSnssai); err != nil {
		return err
	}
	return nil
}

// AssertRecurseN2SmInformationRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of N2SmInformation (e.g. [][]N2SmInformation), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseN2SmInformationRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aN2SmInformation, ok := obj.(N2SmInformation)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertN2SmInformationRequired(aN2SmInformation)
	})
}
