/*
 * Namf_EventExposure
 *
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
	"amf.com/amfcommon"
)

type AmfEventNotification struct {
	NotifyCorrelationId string `json:"notifyCorrelationId,omitempty"`

	SubsChangeNotifyCorrelationId string `json:"subsChangeNotifyCorrelationId,omitempty"`

	ReportList []AmfEventReport `json:"reportList,omitempty"`

	EventSubsSyncInfo AmfEventSubsSyncInfo `json:"eventSubsSyncInfo,omitempty"`
}

// AssertAmfEventNotificationRequired checks if the required fields are not zero-ed
func AssertAmfEventNotificationRequired(obj AmfEventNotification) error {
	for _, el := range obj.ReportList {
		if err := AssertAmfEventReportRequired(el); err != nil {
			return err
		}
	}
	if err := AssertAmfEventSubsSyncInfoRequired(obj.EventSubsSyncInfo); err != nil {
		return err
	}
	return nil
}

// AssertRecurseAmfEventNotificationRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of AmfEventNotification (e.g. [][]AmfEventNotification), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseAmfEventNotificationRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAmfEventNotification, ok := obj.(AmfEventNotification)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertAmfEventNotificationRequired(aAmfEventNotification)
	})
}
