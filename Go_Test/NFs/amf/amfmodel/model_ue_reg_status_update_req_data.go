/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type UeRegStatusUpdateReqData struct {

	TransferStatus UeContextTransferStatus `json:"transferStatus"`

	ToReleaseSessionList []int32 `json:"toReleaseSessionList,omitempty"`

	PcfReselectedInd bool `json:"pcfReselectedInd,omitempty"`

	SmfChangeInfoList []SmfChangeInfo `json:"smfChangeInfoList,omitempty"`
}

// AssertUeRegStatusUpdateReqDataRequired checks if the required fields are not zero-ed
func AssertUeRegStatusUpdateReqDataRequired(obj UeRegStatusUpdateReqData) error {
	elements := map[string]interface{}{
		"transferStatus": obj.TransferStatus,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	if err := AssertUeContextTransferStatusRequired(obj.TransferStatus); err != nil {
		return err
	}
	for _, el := range obj.SmfChangeInfoList {
		if err := AssertSmfChangeInfoRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseUeRegStatusUpdateReqDataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UeRegStatusUpdateReqData (e.g. [][]UeRegStatusUpdateReqData), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseUeRegStatusUpdateReqDataRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUeRegStatusUpdateReqData, ok := obj.(UeRegStatusUpdateReqData)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertUeRegStatusUpdateReqDataRequired(aUeRegStatusUpdateReqData)
	})
}
