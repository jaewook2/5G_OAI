/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type MeasurementLteForMdtAnyOf string

// List of MeasurementLteForMdtAnyOf
const (
	MEASUREMENTLTEFORMDTANYOF_M1 MeasurementLteForMdtAnyOf = "M1"
	MEASUREMENTLTEFORMDTANYOF_M2 MeasurementLteForMdtAnyOf = "M2"
	MEASUREMENTLTEFORMDTANYOF_M3 MeasurementLteForMdtAnyOf = "M3"
	MEASUREMENTLTEFORMDTANYOF_M4_DL MeasurementLteForMdtAnyOf = "M4_DL"
	MEASUREMENTLTEFORMDTANYOF_M4_UL MeasurementLteForMdtAnyOf = "M4_UL"
	MEASUREMENTLTEFORMDTANYOF_M5_DL MeasurementLteForMdtAnyOf = "M5_DL"
	MEASUREMENTLTEFORMDTANYOF_M5_UL MeasurementLteForMdtAnyOf = "M5_UL"
	MEASUREMENTLTEFORMDTANYOF_M6_DL MeasurementLteForMdtAnyOf = "M6_DL"
	MEASUREMENTLTEFORMDTANYOF_M6_UL MeasurementLteForMdtAnyOf = "M6_UL"
	MEASUREMENTLTEFORMDTANYOF_M7_DL MeasurementLteForMdtAnyOf = "M7_DL"
	MEASUREMENTLTEFORMDTANYOF_M7_UL MeasurementLteForMdtAnyOf = "M7_UL"
	MEASUREMENTLTEFORMDTANYOF_M8 MeasurementLteForMdtAnyOf = "M8"
	MEASUREMENTLTEFORMDTANYOF_M9 MeasurementLteForMdtAnyOf = "M9"
)

// AssertMeasurementLteForMdtAnyOfRequired checks if the required fields are not zero-ed
func AssertMeasurementLteForMdtAnyOfRequired(obj MeasurementLteForMdtAnyOf) error {
	return nil
}

// AssertRecurseMeasurementLteForMdtAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of MeasurementLteForMdtAnyOf (e.g. [][]MeasurementLteForMdtAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseMeasurementLteForMdtAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aMeasurementLteForMdtAnyOf, ok := obj.(MeasurementLteForMdtAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertMeasurementLteForMdtAnyOfRequired(aMeasurementLteForMdtAnyOf)
	})
}
