/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type UeN1N2InfoSubscriptionCreatedData struct {

	N1n2NotifySubscriptionId string `json:"n1n2NotifySubscriptionId"`

	SupportedFeatures string `json:"supportedFeatures,omitempty"`
}

// AssertUeN1N2InfoSubscriptionCreatedDataRequired checks if the required fields are not zero-ed
func AssertUeN1N2InfoSubscriptionCreatedDataRequired(obj UeN1N2InfoSubscriptionCreatedData) error {
	elements := map[string]interface{}{
		"n1n2NotifySubscriptionId": obj.N1n2NotifySubscriptionId,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseUeN1N2InfoSubscriptionCreatedDataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UeN1N2InfoSubscriptionCreatedData (e.g. [][]UeN1N2InfoSubscriptionCreatedData), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseUeN1N2InfoSubscriptionCreatedDataRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUeN1N2InfoSubscriptionCreatedData, ok := obj.(UeN1N2InfoSubscriptionCreatedData)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertUeN1N2InfoSubscriptionCreatedDataRequired(aUeN1N2InfoSubscriptionCreatedData)
	})
}
