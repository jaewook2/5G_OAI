/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
	"amf.com/amfcommon"
)

type AmfEventSubscriptionAddInfo struct {
	BindingInfo []string `json:"bindingInfo,omitempty"`

	SubscribingNfType NfType `json:"subscribingNfType,omitempty"`
}

// AssertAmfEventSubscriptionAddInfoRequired checks if the required fields are not zero-ed
func AssertAmfEventSubscriptionAddInfoRequired(obj AmfEventSubscriptionAddInfo) error {
	if err := AssertNfTypeRequired(obj.SubscribingNfType); err != nil {
		return err
	}
	return nil
}

// AssertRecurseAmfEventSubscriptionAddInfoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of AmfEventSubscriptionAddInfo (e.g. [][]AmfEventSubscriptionAddInfo), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseAmfEventSubscriptionAddInfoRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAmfEventSubscriptionAddInfo, ok := obj.(AmfEventSubscriptionAddInfo)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertAmfEventSubscriptionAddInfoRequired(aAmfEventSubscriptionAddInfo)
	})
}
