/*
 * Namf_EventExposure
 *
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
	"amf.com/amfcommon"
)

type Model5GsUserStateInfo struct {
	Var5gsUserState Model5GsUserState `json:"5gsUserState"`

	AccessType AccessType `json:"accessType"`
}

// AssertModel5GsUserStateInfoRequired checks if the required fields are not zero-ed
func AssertModel5GsUserStateInfoRequired(obj Model5GsUserStateInfo) error {
	elements := map[string]interface{}{
		"5gsUserState": obj.Var5gsUserState,
		"accessType":   obj.AccessType,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	if err := AssertModel5GsUserStateRequired(obj.Var5gsUserState); err != nil {
		return err
	}
	return nil
}

// AssertRecurseModel5GsUserStateInfoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Model5GsUserStateInfo (e.g. [][]Model5GsUserStateInfo), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseModel5GsUserStateInfoRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aModel5GsUserStateInfo, ok := obj.(Model5GsUserStateInfo)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertModel5GsUserStateInfoRequired(aModel5GsUserStateInfo)
	})
}
