/*
 * Namf_MT
 *
 * AMF Mobile Terminated Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.1.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
	"time"

	"amf.com/amfcommon"
)

type UeContextInfo struct {
	SupportVoPS bool `json:"supportVoPS,omitempty"`

	SupportVoPSn3gpp bool `json:"supportVoPSn3gpp,omitempty"`

	LastActTime time.Time `json:"lastActTime,omitempty"`

	AccessType AccessType `json:"accessType,omitempty"`

	RatType RatType `json:"ratType,omitempty"`

	SupportedFeatures string `json:"supportedFeatures,omitempty"`
}

// AssertUeContextInfoRequired checks if the required fields are not zero-ed
func AssertUeContextInfoRequired(obj UeContextInfo) error {
	if err := AssertRatTypeRequired(obj.RatType); err != nil {
		return err
	}
	return nil
}

// AssertRecurseUeContextInfoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UeContextInfo (e.g. [][]UeContextInfo), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseUeContextInfoRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUeContextInfo, ok := obj.(UeContextInfo)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertUeContextInfoRequired(aUeContextInfo)
	})
}
