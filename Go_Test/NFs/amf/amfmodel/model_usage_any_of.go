/*
 * Namf_Location
 *
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type UsageAnyOf string

// List of UsageAnyOf
const (
	USAGEANYOF_UNSUCCESS UsageAnyOf = "UNSUCCESS"
	USAGEANYOF_SUCCESS_RESULTS_NOT_USED UsageAnyOf = "SUCCESS_RESULTS_NOT_USED"
	USAGEANYOF_SUCCESS_RESULTS_USED_TO_VERIFY_LOCATION UsageAnyOf = "SUCCESS_RESULTS_USED_TO_VERIFY_LOCATION"
	USAGEANYOF_SUCCESS_RESULTS_USED_TO_GENERATE_LOCATION UsageAnyOf = "SUCCESS_RESULTS_USED_TO_GENERATE_LOCATION"
	USAGEANYOF_SUCCESS_METHOD_NOT_DETERMINED UsageAnyOf = "SUCCESS_METHOD_NOT_DETERMINED"
)

// AssertUsageAnyOfRequired checks if the required fields are not zero-ed
func AssertUsageAnyOfRequired(obj UsageAnyOf) error {
	return nil
}

// AssertRecurseUsageAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UsageAnyOf (e.g. [][]UsageAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseUsageAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUsageAnyOf, ok := obj.(UsageAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertUsageAnyOfRequired(aUsageAnyOf)
	})
}
