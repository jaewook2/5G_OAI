/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
	"amf.com/amfcommon"
)

type AmfStatusChangeNotification struct {
	AmfStatusInfoList []AmfStatusInfo `json:"amfStatusInfoList"`
}

// AssertAmfStatusChangeNotificationRequired checks if the required fields are not zero-ed
func AssertAmfStatusChangeNotificationRequired(obj AmfStatusChangeNotification) error {
	elements := map[string]interface{}{
		"amfStatusInfoList": obj.AmfStatusInfoList,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	for _, el := range obj.AmfStatusInfoList {
		if err := AssertAmfStatusInfoRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseAmfStatusChangeNotificationRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of AmfStatusChangeNotification (e.g. [][]AmfStatusChangeNotification), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseAmfStatusChangeNotificationRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAmfStatusChangeNotification, ok := obj.(AmfStatusChangeNotification)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertAmfStatusChangeNotificationRequired(aAmfStatusChangeNotification)
	})
}
