/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type N1MessageClass struct {
}

// AssertN1MessageClassRequired checks if the required fields are not zero-ed
func AssertN1MessageClassRequired(obj N1MessageClass) error {
	return nil
}

// AssertRecurseN1MessageClassRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of N1MessageClass (e.g. [][]N1MessageClass), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseN1MessageClassRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aN1MessageClass, ok := obj.(N1MessageClass)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertN1MessageClassRequired(aN1MessageClass)
	})
}
