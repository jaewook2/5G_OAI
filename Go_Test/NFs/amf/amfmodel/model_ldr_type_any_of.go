/*
 * Namf_Location
 *
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type LdrTypeAnyOf string

// List of LdrTypeAnyOf
const (
	LDRTYPEANYOF_UE_AVAILABLE LdrTypeAnyOf = "UE_AVAILABLE"
	LDRTYPEANYOF_PERIODIC LdrTypeAnyOf = "PERIODIC"
	LDRTYPEANYOF_ENTERING_INTO_AREA LdrTypeAnyOf = "ENTERING_INTO_AREA"
	LDRTYPEANYOF_LEAVING_FROM_AREA LdrTypeAnyOf = "LEAVING_FROM_AREA"
	LDRTYPEANYOF_BEING_INSIDE_AREA LdrTypeAnyOf = "BEING_INSIDE_AREA"
	LDRTYPEANYOF_MOTION LdrTypeAnyOf = "MOTION"
)

// AssertLdrTypeAnyOfRequired checks if the required fields are not zero-ed
func AssertLdrTypeAnyOfRequired(obj LdrTypeAnyOf) error {
	return nil
}

// AssertRecurseLdrTypeAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of LdrTypeAnyOf (e.g. [][]LdrTypeAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseLdrTypeAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aLdrTypeAnyOf, ok := obj.(LdrTypeAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertLdrTypeAnyOfRequired(aLdrTypeAnyOf)
	})
}
