/*
 * Namf_EventExposure
 *
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type RmState struct {
}

// AssertRmStateRequired checks if the required fields are not zero-ed
func AssertRmStateRequired(obj RmState) error {
	return nil
}

// AssertRecurseRmStateRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RmState (e.g. [][]RmState), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseRmStateRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRmState, ok := obj.(RmState)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertRmStateRequired(aRmState)
	})
}
