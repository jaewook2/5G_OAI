/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
	"amf.com/amfcommon"
)

type AccessType string

// List of AccessType
const (
	ACCESSTYPE__3_GPP_ACCESS    AccessType = "3GPP_ACCESS"
	ACCESSTYPE_NON_3_GPP_ACCESS AccessType = "NON_3GPP_ACCESS"
)

// AssertAccessTypeRequired checks if the required fields are not zero-ed
func AssertAccessTypeRequired(obj AccessType) error {
	return nil
}

// AssertRecurseAccessTypeRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of AccessType (e.g. [][]AccessType), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseAccessTypeRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAccessType, ok := obj.(AccessType)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertAccessTypeRequired(aAccessType)
	})
}
