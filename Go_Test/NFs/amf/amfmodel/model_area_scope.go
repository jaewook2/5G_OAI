/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
	"amf.com/amfcommon"
)

type AreaScope struct {
	EutraCellIdList []string `json:"eutraCellIdList,omitempty"`

	NrCellIdList []string `json:"nrCellIdList,omitempty"`

	TacList []string `json:"tacList,omitempty"`

	TacInfoPerPlmn map[string]TacInfo `json:"tacInfoPerPlmn,omitempty"`
}

// AssertAreaScopeRequired checks if the required fields are not zero-ed
func AssertAreaScopeRequired(obj AreaScope) error {
	return nil
}

// AssertRecurseAreaScopeRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of AreaScope (e.g. [][]AreaScope), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseAreaScopeRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAreaScope, ok := obj.(AreaScope)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertAreaScopeRequired(aAreaScope)
	})
}
