/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type TransferReasonAnyOf string

// List of TransferReasonAnyOf
const (
	TRANSFERREASONANYOF_INIT_REG TransferReasonAnyOf = "INIT_REG"
	TRANSFERREASONANYOF_MOBI_REG TransferReasonAnyOf = "MOBI_REG"
	TRANSFERREASONANYOF_MOBI_REG_UE_VALIDATED TransferReasonAnyOf = "MOBI_REG_UE_VALIDATED"
)

// AssertTransferReasonAnyOfRequired checks if the required fields are not zero-ed
func AssertTransferReasonAnyOfRequired(obj TransferReasonAnyOf) error {
	return nil
}

// AssertRecurseTransferReasonAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TransferReasonAnyOf (e.g. [][]TransferReasonAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseTransferReasonAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTransferReasonAnyOf, ok := obj.(TransferReasonAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertTransferReasonAnyOfRequired(aTransferReasonAnyOf)
	})
}
