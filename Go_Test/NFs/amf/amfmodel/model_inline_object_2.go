/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
	"os"

	"amf.com/amfcommon"
)

type InlineObject2 struct {
	JsonData UeContextCancelRelocateData `json:"jsonData,omitempty"`

	BinaryDataGtpcMessage *os.File `json:"binaryDataGtpcMessage,omitempty"`
}

// AssertInlineObject2Required checks if the required fields are not zero-ed
func AssertInlineObject2Required(obj InlineObject2) error {
	if err := AssertUeContextCancelRelocateDataRequired(obj.JsonData); err != nil {
		return err
	}
	return nil
}

// AssertRecurseInlineObject2Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of InlineObject2 (e.g. [][]InlineObject2), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseInlineObject2Required(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aInlineObject2, ok := obj.(InlineObject2)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertInlineObject2Required(aInlineObject2)
	})
}
