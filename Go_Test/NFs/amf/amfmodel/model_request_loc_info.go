/*
 * Namf_Location
 *
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type RequestLocInfo struct {

	Req5gsLoc bool `json:"req5gsLoc,omitempty"`

	ReqCurrentLoc bool `json:"reqCurrentLoc,omitempty"`

	ReqRatType bool `json:"reqRatType,omitempty"`

	ReqTimeZone bool `json:"reqTimeZone,omitempty"`

	SupportedFeatures string `json:"supportedFeatures,omitempty"`
}

// AssertRequestLocInfoRequired checks if the required fields are not zero-ed
func AssertRequestLocInfoRequired(obj RequestLocInfo) error {
	return nil
}

// AssertRecurseRequestLocInfoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RequestLocInfo (e.g. [][]RequestLocInfo), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseRequestLocInfoRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRequestLocInfo, ok := obj.(RequestLocInfo)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertRequestLocInfoRequired(aRequestLocInfo)
	})
}
