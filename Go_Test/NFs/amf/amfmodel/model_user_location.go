/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type UserLocation struct {

	EutraLocation EutraLocation `json:"eutraLocation,omitempty"`

	NrLocation NrLocation `json:"nrLocation,omitempty"`

	N3gaLocation N3gaLocation `json:"n3gaLocation,omitempty"`

	UtraLocation UtraLocation `json:"utraLocation,omitempty"`

	GeraLocation GeraLocation `json:"geraLocation,omitempty"`
}

// AssertUserLocationRequired checks if the required fields are not zero-ed
func AssertUserLocationRequired(obj UserLocation) error {
	if err := AssertEutraLocationRequired(obj.EutraLocation); err != nil {
		return err
	}
	if err := AssertNrLocationRequired(obj.NrLocation); err != nil {
		return err
	}
	if err := AssertN3gaLocationRequired(obj.N3gaLocation); err != nil {
		return err
	}
	if err := AssertUtraLocationRequired(obj.UtraLocation); err != nil {
		return err
	}
	if err := AssertGeraLocationRequired(obj.GeraLocation); err != nil {
		return err
	}
	return nil
}

// AssertRecurseUserLocationRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UserLocation (e.g. [][]UserLocation), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseUserLocationRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUserLocation, ok := obj.(UserLocation)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertUserLocationRequired(aUserLocation)
	})
}
