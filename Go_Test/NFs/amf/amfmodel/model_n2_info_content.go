/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type N2InfoContent struct {

	NgapMessageType int32 `json:"ngapMessageType,omitempty"`

	NgapIeType NgapIeType `json:"ngapIeType,omitempty"`

	NgapData RefToBinaryData `json:"ngapData"`
}

// AssertN2InfoContentRequired checks if the required fields are not zero-ed
func AssertN2InfoContentRequired(obj N2InfoContent) error {
	elements := map[string]interface{}{
		"ngapData": obj.NgapData,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	if err := AssertNgapIeTypeRequired(obj.NgapIeType); err != nil {
		return err
	}
	if err := AssertRefToBinaryDataRequired(obj.NgapData); err != nil {
		return err
	}
	return nil
}

// AssertRecurseN2InfoContentRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of N2InfoContent (e.g. [][]N2InfoContent), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseN2InfoContentRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aN2InfoContent, ok := obj.(N2InfoContent)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertN2InfoContentRequired(aN2InfoContent)
	})
}
