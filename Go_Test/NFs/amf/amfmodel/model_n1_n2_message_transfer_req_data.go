/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type N1N2MessageTransferReqData struct {

	N1MessageContainer N1MessageContainer `json:"n1MessageContainer,omitempty"`

	N2InfoContainer N2InfoContainer `json:"n2InfoContainer,omitempty"`

	MtData RefToBinaryData `json:"mtData,omitempty"`

	SkipInd bool `json:"skipInd,omitempty"`

	LastMsgIndication bool `json:"lastMsgIndication,omitempty"`

	PduSessionId int32 `json:"pduSessionId,omitempty"`

	LcsCorrelationId string `json:"lcsCorrelationId,omitempty"`

	Ppi int32 `json:"ppi,omitempty"`

	Arp Arp `json:"arp,omitempty"`

	Var5qi int32 `json:"5qi,omitempty"`

	N1n2FailureTxfNotifURI string `json:"n1n2FailureTxfNotifURI,omitempty"`

	SmfReallocationInd bool `json:"smfReallocationInd,omitempty"`

	AreaOfValidity AreaOfValidity `json:"areaOfValidity,omitempty"`

	SupportedFeatures string `json:"supportedFeatures,omitempty"`

	OldGuami Guami `json:"oldGuami,omitempty"`

	MaAcceptedInd bool `json:"maAcceptedInd,omitempty"`

	ExtBufSupport bool `json:"extBufSupport,omitempty"`

	TargetAccess AccessType `json:"targetAccess,omitempty"`
}

// AssertN1N2MessageTransferReqDataRequired checks if the required fields are not zero-ed
func AssertN1N2MessageTransferReqDataRequired(obj N1N2MessageTransferReqData) error {
	if err := AssertN1MessageContainerRequired(obj.N1MessageContainer); err != nil {
		return err
	}
	if err := AssertN2InfoContainerRequired(obj.N2InfoContainer); err != nil {
		return err
	}
	if err := AssertRefToBinaryDataRequired(obj.MtData); err != nil {
		return err
	}
	if err := AssertArpRequired(obj.Arp); err != nil {
		return err
	}
	if err := AssertAreaOfValidityRequired(obj.AreaOfValidity); err != nil {
		return err
	}
	if err := AssertGuamiRequired(obj.OldGuami); err != nil {
		return err
	}
	return nil
}

// AssertRecurseN1N2MessageTransferReqDataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of N1N2MessageTransferReqData (e.g. [][]N1N2MessageTransferReqData), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseN1N2MessageTransferReqDataRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aN1N2MessageTransferReqData, ok := obj.(N1N2MessageTransferReqData)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertN1N2MessageTransferReqDataRequired(aN1N2MessageTransferReqData)
	})
}
