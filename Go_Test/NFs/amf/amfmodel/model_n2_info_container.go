/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type N2InfoContainer struct {

	N2InformationClass N2InformationClass `json:"n2InformationClass"`

	SmInfo N2SmInformation `json:"smInfo,omitempty"`

	RanInfo N2RanInformation `json:"ranInfo,omitempty"`

	NrppaInfo NrppaInformation `json:"nrppaInfo,omitempty"`

	PwsInfo PwsInformation `json:"pwsInfo,omitempty"`

	V2xInfo V2xInformation `json:"v2xInfo,omitempty"`
}

// AssertN2InfoContainerRequired checks if the required fields are not zero-ed
func AssertN2InfoContainerRequired(obj N2InfoContainer) error {
	elements := map[string]interface{}{
		"n2InformationClass": obj.N2InformationClass,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	if err := AssertN2InformationClassRequired(obj.N2InformationClass); err != nil {
		return err
	}
	if err := AssertN2SmInformationRequired(obj.SmInfo); err != nil {
		return err
	}
	if err := AssertN2RanInformationRequired(obj.RanInfo); err != nil {
		return err
	}
	if err := AssertNrppaInformationRequired(obj.NrppaInfo); err != nil {
		return err
	}
	if err := AssertPwsInformationRequired(obj.PwsInfo); err != nil {
		return err
	}
	if err := AssertV2xInformationRequired(obj.V2xInfo); err != nil {
		return err
	}
	return nil
}

// AssertRecurseN2InfoContainerRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of N2InfoContainer (e.g. [][]N2InfoContainer), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseN2InfoContainerRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aN2InfoContainer, ok := obj.(N2InfoContainer)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertN2InfoContainerRequired(aN2InfoContainer)
	})
}
