/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type RatSelectorAnyOf string

// List of RatSelectorAnyOf
const (
	RATSELECTORANYOF_E_UTRA RatSelectorAnyOf = "E-UTRA"
	RATSELECTORANYOF_NR RatSelectorAnyOf = "NR"
)

// AssertRatSelectorAnyOfRequired checks if the required fields are not zero-ed
func AssertRatSelectorAnyOfRequired(obj RatSelectorAnyOf) error {
	return nil
}

// AssertRecurseRatSelectorAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RatSelectorAnyOf (e.g. [][]RatSelectorAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseRatSelectorAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRatSelectorAnyOf, ok := obj.(RatSelectorAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertRatSelectorAnyOfRequired(aRatSelectorAnyOf)
	})
}
