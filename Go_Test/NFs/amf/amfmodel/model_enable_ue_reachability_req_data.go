/*
 * Namf_MT
 *
 * AMF Mobile Terminated Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type EnableUeReachabilityReqData struct {

	Reachability UeReachability `json:"reachability"`

	SupportedFeatures string `json:"supportedFeatures,omitempty"`

	OldGuami Guami `json:"oldGuami,omitempty"`

	ExtBufSupport bool `json:"extBufSupport,omitempty"`
}

// AssertEnableUeReachabilityReqDataRequired checks if the required fields are not zero-ed
func AssertEnableUeReachabilityReqDataRequired(obj EnableUeReachabilityReqData) error {
	elements := map[string]interface{}{
		"reachability": obj.Reachability,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	if err := AssertUeReachabilityRequired(obj.Reachability); err != nil {
		return err
	}
	if err := AssertGuamiRequired(obj.OldGuami); err != nil {
		return err
	}
	return nil
}

// AssertRecurseEnableUeReachabilityReqDataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of EnableUeReachabilityReqData (e.g. [][]EnableUeReachabilityReqData), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseEnableUeReachabilityReqDataRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aEnableUeReachabilityReqData, ok := obj.(EnableUeReachabilityReqData)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertEnableUeReachabilityReqDataRequired(aEnableUeReachabilityReqData)
	})
}
