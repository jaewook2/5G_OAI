/*
 * Namf_Location
 *
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type GnssIdAnyOf string

// List of GnssIdAnyOf
const (
	GNSSIDANYOF_GPS GnssIdAnyOf = "GPS"
	GNSSIDANYOF_GALILEO GnssIdAnyOf = "GALILEO"
	GNSSIDANYOF_SBAS GnssIdAnyOf = "SBAS"
	GNSSIDANYOF_MODERNIZED_GPS GnssIdAnyOf = "MODERNIZED_GPS"
	GNSSIDANYOF_QZSS GnssIdAnyOf = "QZSS"
	GNSSIDANYOF_GLONASS GnssIdAnyOf = "GLONASS"
	GNSSIDANYOF_BDS GnssIdAnyOf = "BDS"
	GNSSIDANYOF_NAVIC GnssIdAnyOf = "NAVIC"
)

// AssertGnssIdAnyOfRequired checks if the required fields are not zero-ed
func AssertGnssIdAnyOfRequired(obj GnssIdAnyOf) error {
	return nil
}

// AssertRecurseGnssIdAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GnssIdAnyOf (e.g. [][]GnssIdAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseGnssIdAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGnssIdAnyOf, ok := obj.(GnssIdAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertGnssIdAnyOfRequired(aGnssIdAnyOf)
	})
}
