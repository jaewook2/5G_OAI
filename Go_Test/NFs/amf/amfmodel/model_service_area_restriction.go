/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type ServiceAreaRestriction struct {

	RestrictionType RestrictionType `json:"restrictionType,omitempty"`

	Areas []Area `json:"areas,omitempty"`

	MaxNumOfTAs int32 `json:"maxNumOfTAs,omitempty"`

	MaxNumOfTAsForNotAllowedAreas int32 `json:"maxNumOfTAsForNotAllowedAreas,omitempty"`
}

// AssertServiceAreaRestrictionRequired checks if the required fields are not zero-ed
func AssertServiceAreaRestrictionRequired(obj ServiceAreaRestriction) error {
	if err := AssertRestrictionTypeRequired(obj.RestrictionType); err != nil {
		return err
	}
	for _, el := range obj.Areas {
		if err := AssertAreaRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseServiceAreaRestrictionRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ServiceAreaRestriction (e.g. [][]ServiceAreaRestriction), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseServiceAreaRestrictionRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aServiceAreaRestriction, ok := obj.(ServiceAreaRestriction)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertServiceAreaRestrictionRequired(aServiceAreaRestriction)
	})
}
