/*
 * Namf_Location
 *
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type CancelPosInfo struct {

	Supi string `json:"supi"`

	HgmlcCallBackURI string `json:"hgmlcCallBackURI"`

	LdrReference string `json:"ldrReference"`

	ServingLMFIdentification string `json:"servingLMFIdentification,omitempty"`

	SupportedFeatures string `json:"supportedFeatures,omitempty"`
}

// AssertCancelPosInfoRequired checks if the required fields are not zero-ed
func AssertCancelPosInfoRequired(obj CancelPosInfo) error {
	elements := map[string]interface{}{
		"supi": obj.Supi,
		"hgmlcCallBackURI": obj.HgmlcCallBackURI,
		"ldrReference": obj.LdrReference,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseCancelPosInfoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CancelPosInfo (e.g. [][]CancelPosInfo), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseCancelPosInfoRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCancelPosInfo, ok := obj.(CancelPosInfo)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertCancelPosInfoRequired(aCancelPosInfo)
	})
}
