/*
 * Namf_Location
 *
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type LocationQoS struct {

	HAccuracy float32 `json:"hAccuracy,omitempty"`

	VAccuracy float32 `json:"vAccuracy,omitempty"`

	VerticalRequested bool `json:"verticalRequested,omitempty"`

	ResponseTime ResponseTime `json:"responseTime,omitempty"`

	LcsQosClass LcsQosClass `json:"lcsQosClass,omitempty"`
}

// AssertLocationQoSRequired checks if the required fields are not zero-ed
func AssertLocationQoSRequired(obj LocationQoS) error {
	if err := AssertResponseTimeRequired(obj.ResponseTime); err != nil {
		return err
	}
	if err := AssertLcsQosClassRequired(obj.LcsQosClass); err != nil {
		return err
	}
	return nil
}

// AssertRecurseLocationQoSRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of LocationQoS (e.g. [][]LocationQoS), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseLocationQoSRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aLocationQoS, ok := obj.(LocationQoS)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertLocationQoSRequired(aLocationQoS)
	})
}
