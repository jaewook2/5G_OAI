/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type V2xContext struct {

	NrV2xServicesAuth NrV2xAuth `json:"nrV2xServicesAuth,omitempty"`

	LteV2xServicesAuth LteV2xAuth `json:"lteV2xServicesAuth,omitempty"`

	NrUeSidelinkAmbr string `json:"nrUeSidelinkAmbr,omitempty"`

	LteUeSidelinkAmbr string `json:"lteUeSidelinkAmbr,omitempty"`

	Pc5QoSPara Pc5QoSPara `json:"Pc5QoSPara,omitempty"`
}

// AssertV2xContextRequired checks if the required fields are not zero-ed
func AssertV2xContextRequired(obj V2xContext) error {
	if err := AssertNrV2xAuthRequired(obj.NrV2xServicesAuth); err != nil {
		return err
	}
	if err := AssertLteV2xAuthRequired(obj.LteV2xServicesAuth); err != nil {
		return err
	}
	if err := AssertPc5QoSParaRequired(obj.Pc5QoSPara); err != nil {
		return err
	}
	return nil
}

// AssertRecurseV2xContextRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of V2xContext (e.g. [][]V2xContext), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseV2xContextRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aV2xContext, ok := obj.(V2xContext)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertV2xContextRequired(aV2xContext)
	})
}
