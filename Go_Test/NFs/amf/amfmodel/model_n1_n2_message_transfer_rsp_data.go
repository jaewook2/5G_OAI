/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type N1N2MessageTransferRspData struct {

	Cause N1N2MessageTransferCause `json:"cause"`

	SupportedFeatures string `json:"supportedFeatures,omitempty"`
}

// AssertN1N2MessageTransferRspDataRequired checks if the required fields are not zero-ed
func AssertN1N2MessageTransferRspDataRequired(obj N1N2MessageTransferRspData) error {
	elements := map[string]interface{}{
		"cause": obj.Cause,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	if err := AssertN1N2MessageTransferCauseRequired(obj.Cause); err != nil {
		return err
	}
	return nil
}

// AssertRecurseN1N2MessageTransferRspDataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of N1N2MessageTransferRspData (e.g. [][]N1N2MessageTransferRspData), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseN1N2MessageTransferRspDataRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aN1N2MessageTransferRspData, ok := obj.(N1N2MessageTransferRspData)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertN1N2MessageTransferRspDataRequired(aN1N2MessageTransferRspData)
	})
}
