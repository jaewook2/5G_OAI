/*
 * Namf_EventExposure
 *
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type CommunicationFailure struct {

	NasReleaseCode string `json:"nasReleaseCode,omitempty"`

	RanReleaseCode NgApCause `json:"ranReleaseCode,omitempty"`
}

// AssertCommunicationFailureRequired checks if the required fields are not zero-ed
func AssertCommunicationFailureRequired(obj CommunicationFailure) error {
	if err := AssertNgApCauseRequired(obj.RanReleaseCode); err != nil {
		return err
	}
	return nil
}

// AssertRecurseCommunicationFailureRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CommunicationFailure (e.g. [][]CommunicationFailure), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseCommunicationFailureRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCommunicationFailure, ok := obj.(CommunicationFailure)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertCommunicationFailureRequired(aCommunicationFailure)
	})
}
