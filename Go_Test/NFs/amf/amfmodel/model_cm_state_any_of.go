/*
 * Namf_EventExposure
 *
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
	"amf.com/amfcommon"
)

type CmStateAnyOf string

// List of CmStateAnyOf
const (
	CMSTATEANYOF_IDLE      CmStateAnyOf = "IDLE"
	CMSTATEANYOF_CONNECTED CmStateAnyOf = "CONNECTED"
)

// AssertCmStateAnyOfRequired checks if the required fields are not zero-ed
func AssertCmStateAnyOfRequired(obj CmStateAnyOf) error {
	return nil
}

// AssertRecurseCmStateAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CmStateAnyOf (e.g. [][]CmStateAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseCmStateAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCmStateAnyOf, ok := obj.(CmStateAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertCmStateAnyOfRequired(aCmStateAnyOf)
	})
}
