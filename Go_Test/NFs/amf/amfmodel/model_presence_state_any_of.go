/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type PresenceStateAnyOf string

// List of PresenceStateAnyOf
const (
	PRESENCESTATEANYOF_IN_AREA PresenceStateAnyOf = "IN_AREA"
	PRESENCESTATEANYOF_OUT_OF_AREA PresenceStateAnyOf = "OUT_OF_AREA"
	PRESENCESTATEANYOF_UNKNOWN PresenceStateAnyOf = "UNKNOWN"
	PRESENCESTATEANYOF_INACTIVE PresenceStateAnyOf = "INACTIVE"
)

// AssertPresenceStateAnyOfRequired checks if the required fields are not zero-ed
func AssertPresenceStateAnyOfRequired(obj PresenceStateAnyOf) error {
	return nil
}

// AssertRecursePresenceStateAnyOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PresenceStateAnyOf (e.g. [][]PresenceStateAnyOf), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecursePresenceStateAnyOfRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPresenceStateAnyOf, ok := obj.(PresenceStateAnyOf)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertPresenceStateAnyOfRequired(aPresenceStateAnyOf)
	})
}
