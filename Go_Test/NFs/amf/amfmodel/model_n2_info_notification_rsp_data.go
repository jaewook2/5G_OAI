/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel

import (
"amf.com/amfcommon"
)

type N2InfoNotificationRspData struct {

	N2InfoContent N2InfoContent `json:"n2InfoContent,omitempty"`
}

// AssertN2InfoNotificationRspDataRequired checks if the required fields are not zero-ed
func AssertN2InfoNotificationRspDataRequired(obj N2InfoNotificationRspData) error {
	if err := AssertN2InfoContentRequired(obj.N2InfoContent); err != nil {
		return err
	}
	return nil
}

// AssertRecurseN2InfoNotificationRspDataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of N2InfoNotificationRspData (e.g. [][]N2InfoNotificationRspData), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecurseN2InfoNotificationRspDataRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aN2InfoNotificationRspData, ok := obj.(N2InfoNotificationRspData)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertN2InfoNotificationRspDataRequired(aN2InfoNotificationRspData)
	})
}
