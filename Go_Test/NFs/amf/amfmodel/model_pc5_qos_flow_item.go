/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amfmodel
import (
"amf.com/amfcommon"
)

type Pc5QosFlowItem struct {

	Pqi int32 `json:"pqi"`

	Pc5FlowBitRates Pc5FlowBitRates `json:"pc5FlowBitRates,omitempty"`

	Range int32 `json:"range,omitempty"`
}

// AssertPc5QosFlowItemRequired checks if the required fields are not zero-ed
func AssertPc5QosFlowItemRequired(obj Pc5QosFlowItem) error {
	elements := map[string]interface{}{
		"pqi": obj.Pqi,
	}
	for name, el := range elements {
		if isZero := amfcommon.IsZeroValue(el); isZero {
			return &amfcommon.RequiredError{Field: name}
		}
	}

	if err := AssertPc5FlowBitRatesRequired(obj.Pc5FlowBitRates); err != nil {
		return err
	}
	return nil
}

// AssertRecursePc5QosFlowItemRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Pc5QosFlowItem (e.g. [][]Pc5QosFlowItem), otherwise amfcommon.ErrTypeAssertionError is thrown.
func AssertRecursePc5QosFlowItemRequired(objSlice interface{}) error {
	return amfcommon.AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPc5QosFlowItem, ok := obj.(Pc5QosFlowItem)
		if !ok {
			return amfcommon.ErrTypeAssertionError
		}
		return AssertPc5QosFlowItemRequired(aPc5QosFlowItem)
	})
}
